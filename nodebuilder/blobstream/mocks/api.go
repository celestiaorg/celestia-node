// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/celestiaorg/celestia-node/nodebuilder/blobstream (interfaces: Module)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	blobstream "github.com/celestiaorg/celestia-node/nodebuilder/blobstream"
	gomock "github.com/golang/mock/gomock"
)

// MockModule is a mock of Module interface.
type MockModule struct {
	ctrl     *gomock.Controller
	recorder *MockModuleMockRecorder
}

// MockModuleMockRecorder is the mock recorder for MockModule.
type MockModuleMockRecorder struct {
	mock *MockModule
}

// NewMockModule creates a new mock instance.
func NewMockModule(ctrl *gomock.Controller) *MockModule {
	mock := &MockModule{ctrl: ctrl}
	mock.recorder = &MockModuleMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockModule) EXPECT() *MockModuleMockRecorder {
	return m.recorder
}

// GetDataRootTupleInclusionProof mocks base method.
func (m *MockModule) GetDataRootTupleInclusionProof(arg0 context.Context, arg1, arg2, arg3 uint64) (*blobstream.DataRootTupleInclusionProof, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDataRootTupleInclusionProof", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(*blobstream.DataRootTupleInclusionProof)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDataRootTupleInclusionProof indicates an expected call of GetDataRootTupleInclusionProof.
func (mr *MockModuleMockRecorder) GetDataRootTupleInclusionProof(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDataRootTupleInclusionProof", reflect.TypeOf((*MockModule)(nil).GetDataRootTupleInclusionProof), arg0, arg1, arg2, arg3)
}

// GetDataRootTupleRoot mocks base method.
func (m *MockModule) GetDataRootTupleRoot(arg0 context.Context, arg1, arg2 uint64) (*blobstream.DataRootTupleRoot, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDataRootTupleRoot", arg0, arg1, arg2)
	ret0, _ := ret[0].(*blobstream.DataRootTupleRoot)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDataRootTupleRoot indicates an expected call of GetDataRootTupleRoot.
func (mr *MockModuleMockRecorder) GetDataRootTupleRoot(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDataRootTupleRoot", reflect.TypeOf((*MockModule)(nil).GetDataRootTupleRoot), arg0, arg1, arg2)
}
