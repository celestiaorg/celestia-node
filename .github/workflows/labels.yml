name: Required Labels

on:
  pull_request:
    types: [opened, labeled, unlabeled, synchronize, edited]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  label:
    runs-on: ubuntu-latest
    steps:
      - uses: mheap/github-action-required-labels@v5
        with:
          mode: minimum
          count: 1
          labels: "kind:fix, kind:misc, kind:break!, kind:refactor, kind:feat, kind:deps, kind:docs, kind:ci, kind:chore, kind:testing" # yamllint disable-line rule:line-length

  apply-breaking:
    runs-on: ubuntu-latest
    if: |
      (github.event.action == 'opened' ||
      github.event.action == 'synchronize' ||
      github.event.action == 'reopened' ||
      github.event.action == 'edited' ||
      github.event.action == 'labeled' ||
      github.event.action == 'unlabeled') &&
      github.actor != 'dependabot[bot]'
    permissions:
      pull-requests: write
      contents: read

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up GitHub CLI
        run: |
          sudo apt-get install -y gh
      - name: Check if 'kind:break!' label is already present
        id: check_label
        run: |
          gh pr view ${{ github.event.pull_request.number }} --json labels --jq '.labels | map(.name) | contains(["kind:break!"])'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run check for breaking changes
        id: breaking_change
        env:
          BASE_BRANCH: ${{ github.event.pull_request.base.ref }}
        run: |
          echo "Base Branch: $BASE_BRANCH"
          git fetch origin "$BASE_BRANCH"
          make detect-breaking

      - name: Add label if breaking changes detected
        if: failure()
        run: |
          echo "Label check result: ${{ steps.check_label.outputs }}"
          echo "Label check result2: ${{ steps.check_label.outputs.exits }}"
          echo "Applying 'kind:break!' label to PR #${{ github.event.pull_request.number }}."
          gh pr edit ${{ github.event.pull_request.number }} --add-label "kind:break!"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Label already exists or apply failed
        if: failure() && steps.check_label.outputs == 'true'
        run: echo "Label already exists or failed to apply label."
