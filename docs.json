{
    "openrpc": "1.2.6",
    "info": {
        "title": "Celestia Node API",
        "description": "The Celestia Node API is the collection of RPC methods that can be used to interact with the services provided by Celestia Data Availability Nodes.",
        "version": "v0.22.0-arabica-4-g16b4943d"
    },
    "externalDocs": {
        "description": "Celestia Node GitHub",
        "url": "https://github.com/celestiaorg/celestia-node"
    },
    "methods": [
        {
            "name": "blob.Get",
            "description": "Auth level: read",
            "summary": "Get retrieves the blob by commitment under the given namespace and height.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "height",
                    "description": "uint64",
                    "summary": "",
                    "schema": {
                        "examples": [
                            42
                        ],
                        "type": [
                            "integer"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "namespace",
                    "description": "libshare.Namespace",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAMJ/xGlNMdE="
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "commitment",
                    "description": "blob.Commitment",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "aHlbp+J9yub6hw/uhK6dP8hBLR2mFy78XNRRdLf2794="
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*blob.Blob",
                "description": "*blob.Blob",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "namespace": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAMJ/xGlNMdE=",
                            "data": "z8QyNztvogN7NYU27gI+nJgg1vMJtkK3vbduSDz7/8mhmos37I7duH51kkgouxrsdhdOBJ1431OmipNfVedbtwe6zQ06EbJBl/jk4QwwU3S29YBTUZcUfTzXpEJIuMrYzU6YPxN8Zce/KNdsEIy4zxdfxekXpvsgZMBhf83iYgfHvsFAoJmmCp/ORAUoAFf7tJ7cF8RZyA20ftqRa1uhAmktxIb58abpGTG+TNgq3mjyvswECVykJYqGjqNtInyIx2EQOnVp2q69YHkegdoBvoOKzEFigQTdrL2TZBex4MhkrYt7Zf0DQyNMRkCPL/zKYE3bhvXNWMThWCmhD5TOApzirORXKOTB0nxhjDF/aFYkrS+IKBw1KfJ5isldWvmasJBWwRgDuli6Cty67vMMk7fUUTUf0St6rvQeftSoEVlC1xEw46+h5kIXaWiM0g/EzGIAdZHycUFWCSdnt3p7BS5ttEpSf1d6ZbVYYL2y0XguH41k54JqufEMAw9ukmaF0IbN9Jk6fNefV1dsWTdCP6Mz6e+RTCd9DQGqb2VrsvMzx5uVidLD8ND79pvXgL1VzyhJaMTcjSfZK15jOxLwGh1arZc2gyTNiq2pu6wNz0tdJp+fFU+peG8rHN8=",
                            "share_version": 0,
                            "commitment": "aHlbp+J9yub6hw/uhK6dP8hBLR2mFy78XNRRdLf2794=",
                            "index": -1
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "blob": {},
                        "commitment": {
                            "media": {
                                "binaryEncoding": "base64"
                            },
                            "type": "string"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Source of the default service's implementation of this method.",
                "url": "https://github.com/celestiaorg/celestia-node/blob/main/nodebuilder/blob/blob.go#L97"
            }
        },
        {
            "name": "blob.GetAll",
            "description": "Auth level: read",
            "summary": "GetAll returns all blobs under the given namespaces at the given height.\nIf all blobs were found without any errors, the user will receive a list of blobs.\nIf the BlobService couldn't find any blobs under the requested namespaces,\nthe user will receive an empty list of blobs along with an empty error.\nIf some of the requested namespaces were not found, the user will receive all the found blobs\nand an empty error. If there were internal errors during some of the requests,\nthe user will receive all found blobs along with a combined error message.\n\nAll blobs will preserve the order of the namespaces that were requested.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "height",
                    "description": "uint64",
                    "summary": "",
                    "schema": {
                        "examples": [
                            42
                        ],
                        "type": [
                            "integer"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "namespaces",
                    "description": "[]libshare.Namespace",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAMJ/xGlNMdE="
                            ]
                        ],
                        "items": [
                            {
                                "additionalProperties": false,
                                "type": [
                                    "object"
                                ]
                            }
                        ],
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "[]*blob.Blob",
                "description": "[]*blob.Blob",
                "summary": "",
                "schema": {
                    "examples": [
                        [
                            {
                                "namespace": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAMJ/xGlNMdE=",
                                "data": "z8QyNztvogN7NYU27gI+nJgg1vMJtkK3vbduSDz7/8mhmos37I7duH51kkgouxrsdhdOBJ1431OmipNfVedbtwe6zQ06EbJBl/jk4QwwU3S29YBTUZcUfTzXpEJIuMrYzU6YPxN8Zce/KNdsEIy4zxdfxekXpvsgZMBhf83iYgfHvsFAoJmmCp/ORAUoAFf7tJ7cF8RZyA20ftqRa1uhAmktxIb58abpGTG+TNgq3mjyvswECVykJYqGjqNtInyIx2EQOnVp2q69YHkegdoBvoOKzEFigQTdrL2TZBex4MhkrYt7Zf0DQyNMRkCPL/zKYE3bhvXNWMThWCmhD5TOApzirORXKOTB0nxhjDF/aFYkrS+IKBw1KfJ5isldWvmasJBWwRgDuli6Cty67vMMk7fUUTUf0St6rvQeftSoEVlC1xEw46+h5kIXaWiM0g/EzGIAdZHycUFWCSdnt3p7BS5ttEpSf1d6ZbVYYL2y0XguH41k54JqufEMAw9ukmaF0IbN9Jk6fNefV1dsWTdCP6Mz6e+RTCd9DQGqb2VrsvMzx5uVidLD8ND79pvXgL1VzyhJaMTcjSfZK15jOxLwGh1arZc2gyTNiq2pu6wNz0tdJp+fFU+peG8rHN8=",
                                "share_version": 0,
                                "commitment": "aHlbp+J9yub6hw/uhK6dP8hBLR2mFy78XNRRdLf2794=",
                                "index": -1
                            }
                        ]
                    ],
                    "items": [
                        {
                            "additionalProperties": false,
                            "properties": {
                                "blob": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "blob": {},
                                        "commitment": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "commitment": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                }
                            },
                            "type": [
                                "object"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Source of the default service's implementation of this method.",
                "url": "https://github.com/celestiaorg/celestia-node/blob/main/nodebuilder/blob/blob.go#L106"
            }
        },
        {
            "name": "blob.GetCommitmentProof",
            "description": "Auth level: read",
            "summary": "GetCommitmentProof generates a commitment proof for a share commitment.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "height",
                    "description": "uint64",
                    "summary": "",
                    "schema": {
                        "examples": [
                            42
                        ],
                        "type": [
                            "integer"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "namespace",
                    "description": "libshare.Namespace",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAMJ/xGlNMdE="
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "shareCommitment",
                    "description": "[]byte",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "Ynl0ZSBhcnJheQ=="
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*blob.CommitmentProof",
                "description": "*blob.CommitmentProof",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "subtree_roots": [
                                "Ynl0ZSBhcnJheQ=="
                            ],
                            "subtree_root_proofs": [
                                {}
                            ],
                            "namespace_id": "Bw==",
                            "row_proof": {
                                "row_roots": [
                                    "Ynl0ZSBhcnJheQ=="
                                ],
                                "proofs": [
                                    {
                                        "total": 42,
                                        "index": 42,
                                        "leaf_hash": "Ynl0ZSBhcnJheQ==",
                                        "aunts": [
                                            "Ynl0ZSBhcnJheQ=="
                                        ]
                                    }
                                ],
                                "root": "Ynl0ZSBhcnJheQ==",
                                "start_row": 42,
                                "end_row": 42
                            },
                            "namespace_version": 7
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "namespace_id": {
                            "media": {
                                "binaryEncoding": "base64"
                            },
                            "type": "string"
                        },
                        "namespace_version": {
                            "type": "integer"
                        },
                        "row_proof": {
                            "additionalProperties": false,
                            "properties": {
                                "end_row": {
                                    "type": "integer"
                                },
                                "proofs": {
                                    "items": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "root": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "row_roots": {
                                    "items": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "start_row": {
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        },
                        "subtree_root_proofs": {
                            "items": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "subtree_roots": {
                            "items": {
                                "media": {
                                    "binaryEncoding": "base64"
                                },
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Source of the default service's implementation of this method.",
                "url": "https://github.com/celestiaorg/celestia-node/blob/main/nodebuilder/blob/blob.go#L119"
            }
        },
        {
            "name": "blob.GetProof",
            "description": "Auth level: read",
            "summary": "GetProof retrieves proofs in the given namespaces at the given height by commitment.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "height",
                    "description": "uint64",
                    "summary": "",
                    "schema": {
                        "examples": [
                            42
                        ],
                        "type": [
                            "integer"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "namespace",
                    "description": "libshare.Namespace",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAMJ/xGlNMdE="
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "commitment",
                    "description": "blob.Commitment",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "aHlbp+J9yub6hw/uhK6dP8hBLR2mFy78XNRRdLf2794="
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*blob.Proof",
                "description": "*blob.Proof",
                "summary": "",
                "schema": {
                    "examples": [
                        [
                            {
                                "end": 8,
                                "nodes": [
                                    "/////////////////////////////////////////////////////////////////////////////wuxStDHcZ7+b5byNQMVLJbzBT3wmObsThoQ0sCTjTCP"
                                ],
                                "is_max_namespace_ignored": true
                            },
                            {
                                "end": 8,
                                "nodes": [
                                    "//////////////////////////////////////////////////////////////////////////////n1NeJxPU2bZUAccKZZ+LAu2Wj5ajbVYURV9ojhSKwp"
                                ],
                                "is_max_namespace_ignored": true
                            },
                            {
                                "end": 8,
                                "nodes": [
                                    "/////////////////////////////////////////////////////////////////////////////0xK8BKnzDmwK0HR4ZJvyB4kh3jPPXGxaGPFoga8vPxF"
                                ],
                                "is_max_namespace_ignored": true
                            },
                            {
                                "end": 7,
                                "nodes": [
                                    "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAMJ/xGlNMdEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwn/EaU0x0UTO9HUGKjyjcv5U2gHeSjJ8S1rftqv6k8kxlVWW8e/7",
                                    "/////////////////////////////////////////////////////////////////////////////wexh4khLQ9HQ2X6nh9wU5B+m6r+LWwPTEDTa5/CosDF"
                                ],
                                "is_max_namespace_ignored": true
                            }
                        ]
                    ],
                    "items": [
                        {
                            "additionalProperties": false,
                            "type": [
                                "object"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Source of the default service's implementation of this method.",
                "url": "https://github.com/celestiaorg/celestia-node/blob/main/nodebuilder/blob/blob.go#L110"
            }
        },
        {
            "name": "blob.Included",
            "description": "Auth level: read",
            "summary": "Included checks whether a blob's given commitment(Merkle subtree root) is included at\ngiven height and under the namespace.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "height",
                    "description": "uint64",
                    "summary": "",
                    "schema": {
                        "examples": [
                            42
                        ],
                        "type": [
                            "integer"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "namespace",
                    "description": "libshare.Namespace",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAMJ/xGlNMdE="
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "proof",
                    "description": "*blob.Proof",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "end": 8,
                                    "nodes": [
                                        "/////////////////////////////////////////////////////////////////////////////wuxStDHcZ7+b5byNQMVLJbzBT3wmObsThoQ0sCTjTCP"
                                    ],
                                    "is_max_namespace_ignored": true
                                },
                                {
                                    "end": 8,
                                    "nodes": [
                                        "//////////////////////////////////////////////////////////////////////////////n1NeJxPU2bZUAccKZZ+LAu2Wj5ajbVYURV9ojhSKwp"
                                    ],
                                    "is_max_namespace_ignored": true
                                },
                                {
                                    "end": 8,
                                    "nodes": [
                                        "/////////////////////////////////////////////////////////////////////////////0xK8BKnzDmwK0HR4ZJvyB4kh3jPPXGxaGPFoga8vPxF"
                                    ],
                                    "is_max_namespace_ignored": true
                                },
                                {
                                    "end": 7,
                                    "nodes": [
                                        "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAMJ/xGlNMdEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwn/EaU0x0UTO9HUGKjyjcv5U2gHeSjJ8S1rftqv6k8kxlVWW8e/7",
                                        "/////////////////////////////////////////////////////////////////////////////wexh4khLQ9HQ2X6nh9wU5B+m6r+LWwPTEDTa5/CosDF"
                                    ],
                                    "is_max_namespace_ignored": true
                                }
                            ]
                        ],
                        "items": [
                            {
                                "additionalProperties": false,
                                "type": [
                                    "object"
                                ]
                            }
                        ],
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "commitment",
                    "description": "blob.Commitment",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "aHlbp+J9yub6hw/uhK6dP8hBLR2mFy78XNRRdLf2794="
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "bool",
                "description": "bool",
                "summary": "",
                "schema": {
                    "examples": [
                        true
                    ],
                    "type": [
                        "boolean"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Source of the default service's implementation of this method.",
                "url": "https://github.com/celestiaorg/celestia-node/blob/main/nodebuilder/blob/blob.go#L128"
            }
        },
        {
            "name": "blob.Submit",
            "description": "Auth level: write",
            "summary": "Submit sends Blobs and reports the height in which they were included.\nAllows sending multiple Blobs atomically synchronously.\nUses default wallet registered on the Node.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "blobs",
                    "description": "[]*blob.Blob",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "namespace": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAMJ/xGlNMdE=",
                                    "data": "z8QyNztvogN7NYU27gI+nJgg1vMJtkK3vbduSDz7/8mhmos37I7duH51kkgouxrsdhdOBJ1431OmipNfVedbtwe6zQ06EbJBl/jk4QwwU3S29YBTUZcUfTzXpEJIuMrYzU6YPxN8Zce/KNdsEIy4zxdfxekXpvsgZMBhf83iYgfHvsFAoJmmCp/ORAUoAFf7tJ7cF8RZyA20ftqRa1uhAmktxIb58abpGTG+TNgq3mjyvswECVykJYqGjqNtInyIx2EQOnVp2q69YHkegdoBvoOKzEFigQTdrL2TZBex4MhkrYt7Zf0DQyNMRkCPL/zKYE3bhvXNWMThWCmhD5TOApzirORXKOTB0nxhjDF/aFYkrS+IKBw1KfJ5isldWvmasJBWwRgDuli6Cty67vMMk7fUUTUf0St6rvQeftSoEVlC1xEw46+h5kIXaWiM0g/EzGIAdZHycUFWCSdnt3p7BS5ttEpSf1d6ZbVYYL2y0XguH41k54JqufEMAw9ukmaF0IbN9Jk6fNefV1dsWTdCP6Mz6e+RTCd9DQGqb2VrsvMzx5uVidLD8ND79pvXgL1VzyhJaMTcjSfZK15jOxLwGh1arZc2gyTNiq2pu6wNz0tdJp+fFU+peG8rHN8=",
                                    "share_version": 0,
                                    "commitment": "aHlbp+J9yub6hw/uhK6dP8hBLR2mFy78XNRRdLf2794=",
                                    "index": -1
                                }
                            ]
                        ],
                        "items": [
                            {
                                "additionalProperties": false,
                                "properties": {
                                    "blob": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "blob": {},
                                            "commitment": {
                                                "media": {
                                                    "binaryEncoding": "base64"
                                                },
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "commitment": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    }
                                },
                                "type": [
                                    "object"
                                ]
                            }
                        ],
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "options",
                    "description": "*blob.SubmitOptions",
                    "summary": "",
                    "schema": {
                        "examples": [
                            {
                                "gas_price": 0.002,
                                "is_gas_price_set": true,
                                "max_gas_price": 0.2,
                                "gas": 142225,
                                "tx_priority": 1,
                                "key_name": "my_celes_key",
                                "signer_address": "celestia1pjcmwj8w6hyr2c4wehakc5g8cfs36aysgucx66",
                                "fee_granter_address": "celestia1hakc56ax66ypjcmwj8w6hyr2c4g8cfs3wesguc"
                            }
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "uint64",
                "description": "uint64",
                "summary": "",
                "schema": {
                    "examples": [
                        42
                    ],
                    "type": [
                        "integer"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Source of the default service's implementation of this method.",
                "url": "https://github.com/celestiaorg/celestia-node/blob/main/nodebuilder/blob/blob.go#L93"
            }
        },
        {
            "name": "blob.Subscribe",
            "description": "Auth level: read",
            "summary": "Subscribe to published blobs from the given namespace as they are included.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "namespace",
                    "description": "libshare.Namespace",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAMJ/xGlNMdE="
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "\u003c-chan *blob.SubscriptionResponse",
                "description": "\u003c-chan *blob.SubscriptionResponse",
                "summary": "",
                "schema": {
                    "title": "typeUnsupportedByJSONSchema",
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Source of the default service's implementation of this method.",
                "url": "https://github.com/celestiaorg/celestia-node/blob/main/nodebuilder/blob/blob.go#L138"
            }
        },
        {
            "name": "das.SamplingStats",
            "description": "Auth level: read",
            "summary": "SamplingStats returns the current statistics over the DA sampling process.\n",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "das.SamplingStats",
                "description": "das.SamplingStats",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "head_of_sampled_chain": 1092,
                            "head_of_catchup": 34101,
                            "network_head_height": 470292,
                            "workers": [
                                {
                                    "job_type": "catchup",
                                    "current": 1093,
                                    "from": 1002,
                                    "to": 1101
                                },
                                {
                                    "job_type": "catchup",
                                    "current": 33343,
                                    "from": 33302,
                                    "to": 33401
                                },
                                {
                                    "job_type": "catchup",
                                    "current": 34047,
                                    "from": 34002,
                                    "to": 34101
                                },
                                {
                                    "job_type": "catchup",
                                    "current": 1327,
                                    "from": 1302,
                                    "to": 1401
                                },
                                {
                                    "job_type": "catchup",
                                    "current": 1197,
                                    "from": 1102,
                                    "to": 1201
                                },
                                {
                                    "job_type": "catchup",
                                    "current": 1408,
                                    "from": 1402,
                                    "to": 1501
                                }
                            ],
                            "concurrency": 6,
                            "catch_up_done": false,
                            "is_running": true
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "catch_up_done": {
                            "type": "boolean"
                        },
                        "concurrency": {
                            "type": "integer"
                        },
                        "failed": {
                            "patternProperties": {
                                ".*": {
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        },
                        "head_of_catchup": {
                            "type": "integer"
                        },
                        "head_of_sampled_chain": {
                            "type": "integer"
                        },
                        "is_running": {
                            "type": "boolean"
                        },
                        "network_head_height": {
                            "type": "integer"
                        },
                        "workers": {
                            "items": {
                                "additionalProperties": false,
                                "properties": {
                                    "current": {
                                        "type": "integer"
                                    },
                                    "error": {
                                        "type": "string"
                                    },
                                    "from": {
                                        "type": "integer"
                                    },
                                    "job_type": {
                                        "type": "string"
                                    },
                                    "to": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Source of the default service's implementation of this method.",
                "url": "https://github.com/celestiaorg/celestia-node/blob/main/nodebuilder/das/das.go#L27"
            }
        },
        {
            "name": "das.WaitCatchUp",
            "description": "Auth level: read",
            "summary": "WaitCatchUp blocks until DASer finishes catching up to the network head.\n",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "Null",
                "description": "Null",
                "schema": {
                    "type": [
                        "null"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Source of the default service's implementation of this method.",
                "url": "https://github.com/celestiaorg/celestia-node/blob/main/nodebuilder/das/das.go#L31"
            }
        },
        {
            "name": "fraud.Get",
            "description": "Auth level: read",
            "summary": "Get fetches fraud proofs from the disk by its type.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "proofType",
                    "description": "fraud.ProofType",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "badencodingv0.1"
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "[]Proof",
                "description": "[]Proof",
                "summary": "",
                "schema": {
                    "examples": [
                        [
                            {
                                "proof_type": "badencodingv0.1",
                                "data": "ChJiYWQgZW5jb2RpbmcgcHJvb2YQKg=="
                            }
                        ]
                    ],
                    "items": [
                        {
                            "additionalProperties": false,
                            "type": [
                                "object"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Source of the default service's implementation of this method.",
                "url": "https://github.com/celestiaorg/celestia-node/blob/main/nodebuilder/fraud/fraud.go#L38"
            }
        },
        {
            "name": "fraud.Subscribe",
            "description": "Auth level: read",
            "summary": "Subscribe allows to subscribe on a Proof pub sub topic by its type.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "proofType",
                    "description": "fraud.ProofType",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "badencodingv0.1"
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "\u003c-chan *Proof",
                "description": "\u003c-chan *Proof",
                "summary": "",
                "schema": {
                    "title": "typeUnsupportedByJSONSchema",
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Source of the default service's implementation of this method.",
                "url": "https://github.com/celestiaorg/celestia-node/blob/main/nodebuilder/fraud/fraud.go#L34"
            }
        },
        {
            "name": "header.GetByHash",
            "description": "Auth level: read",
            "summary": "GetByHash returns the header of the given hash from the node's header store.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "hash",
                    "description": "libhead.Hash",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "453D0BC3CB88A2ED6F2E06021383B22C72D25D7741AE51B4CAE1AD34D72A3F07"
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*header.ExtendedHeader",
                "description": "*header.ExtendedHeader",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "header": {
                                "version": {
                                    "block": "11"
                                },
                                "chain_id": "arabica-6",
                                "height": "67374",
                                "time": "2023-02-25T12:10:28.067566292Z",
                                "last_block_id": {
                                    "hash": "47A2C7758760988500B2F043D3903BBBF1C8B383CA33CF7056AA45E22055663E",
                                    "parts": {
                                        "total": 1,
                                        "hash": "33B012F244E27672169DD3D62CDBC92DA9486E410A5530F41FE6A890D8E2EE42"
                                    }
                                },
                                "last_commit_hash": "888D47F5E9473501C99F2B6136B6B9FFBC9D1CD2F54002BCD5DF002FFEF0A83D",
                                "data_hash": "257760461993F8F197B421EC7435F3C36C3734923E3DA9A42DC73B05F07B3D08",
                                "validators_hash": "883A0C92B8D976312B249C1397E73CF2981A9EB715717CBEE3800B8380C22C1D",
                                "next_validators_hash": "883A0C92B8D976312B249C1397E73CF2981A9EB715717CBEE3800B8380C22C1D",
                                "consensus_hash": "048091BC7DDC283F77BFBF91D73C44DA58C3DF8A9CBC867405D8B7F3DAADA22F",
                                "app_hash": "1FC70854A185737C7FD720FCCE9167876EE4B9ABE23DB1EBB8C552D3E3978435",
                                "last_results_hash": "E3B0C44298FC1C149AFBF4C8996FB92427AE41E4649B934CA495991B7852B855",
                                "evidence_hash": "E3B0C44298FC1C149AFBF4C8996FB92427AE41E4649B934CA495991B7852B855",
                                "proposer_address": "57DC09D28388DBF977CFC30EF50BE8B644CCC1FA"
                            },
                            "validator_set": {
                                "validators": [
                                    {
                                        "address": "57DC09D28388DBF977CFC30EF50BE8B644CCC1FA",
                                        "pub_key": {
                                            "type": "tendermint/PubKeyEd25519",
                                            "value": "aoB4xU9//HAqOP9ciyp0+PTdZxt/UGKgZOabU6JxW8o="
                                        },
                                        "voting_power": "5000000000",
                                        "proposer_priority": "0"
                                    }
                                ],
                                "proposer": {
                                    "address": "57DC09D28388DBF977CFC30EF50BE8B644CCC1FA",
                                    "pub_key": {
                                        "type": "tendermint/PubKeyEd25519",
                                        "value": "aoB4xU9//HAqOP9ciyp0+PTdZxt/UGKgZOabU6JxW8o="
                                    },
                                    "voting_power": "5000000000",
                                    "proposer_priority": "0"
                                }
                            },
                            "commit": {
                                "height": 67374,
                                "round": 0,
                                "block_id": {
                                    "hash": "A7F6B1CF33313121539206754A73FDC22ADA48C4AA8C4BB4F707ED2E089E59D3",
                                    "parts": {
                                        "total": 1,
                                        "hash": "6634FE1E1DDDCB9914ACE81F146013986F5FDA03A8F1C16DC5ECA0D9B0E08FBC"
                                    }
                                },
                                "signatures": [
                                    {
                                        "block_id_flag": 2,
                                        "validator_address": "57DC09D28388DBF977CFC30EF50BE8B644CCC1FA",
                                        "timestamp": "2023-02-25T12:10:38.130121476Z",
                                        "signature": "HyR/uRIUNc5GNqQteZyrVjJM47SI9sRAgrLsNqJDls3AzbvHUfN4zzWyw0afyEvNm98Bm2GIoJoZC5D8oQvdBA=="
                                    }
                                ]
                            },
                            "dah": {
                                "row_roots": [
                                    "//////////7//////////ql+/VFmJ8PWE9BcjrTDLrY/hzVeGdzFCpfEhiXDXZmt",
                                    "/////////////////////zHeGnUtPJn8QyPpePSYl4qRVrcUvG2fwptyoA85Myik"
                                ],
                                "column_roots": [
                                    "//////////7//////////ql+/VFmJ8PWE9BcjrTDLrY/hzVeGdzFCpfEhiXDXZmt",
                                    "/////////////////////zHeGnUtPJn8QyPpePSYl4qRVrcUvG2fwptyoA85Myik"
                                ]
                            }
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "commit": {
                            "additionalProperties": false,
                            "properties": {
                                "block_id": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "hash": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        },
                                        "parts": {
                                            "additionalProperties": false,
                                            "properties": {
                                                "hash": {
                                                    "media": {
                                                        "binaryEncoding": "base64"
                                                    },
                                                    "type": "string"
                                                },
                                                "total": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "height": {
                                    "type": "integer"
                                },
                                "round": {
                                    "type": "integer"
                                },
                                "signatures": {
                                    "items": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "block_id_flag": {
                                                "type": "integer"
                                            },
                                            "signature": {
                                                "media": {
                                                    "binaryEncoding": "base64"
                                                },
                                                "type": "string"
                                            },
                                            "timestamp": {
                                                "format": "date-time",
                                                "type": "string"
                                            },
                                            "validator_address": {
                                                "media": {
                                                    "binaryEncoding": "base64"
                                                },
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "dah": {
                            "additionalProperties": false,
                            "properties": {
                                "column_roots": {
                                    "items": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "row_roots": {
                                    "items": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "header": {
                            "additionalProperties": false,
                            "properties": {
                                "app_hash": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "chain_id": {
                                    "type": "string"
                                },
                                "consensus_hash": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "data_hash": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "evidence_hash": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "height": {
                                    "type": "integer"
                                },
                                "last_block_id": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "hash": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        },
                                        "parts": {
                                            "additionalProperties": false,
                                            "properties": {
                                                "hash": {
                                                    "media": {
                                                        "binaryEncoding": "base64"
                                                    },
                                                    "type": "string"
                                                },
                                                "total": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "last_commit_hash": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "last_results_hash": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "next_validators_hash": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "proposer_address": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "time": {
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "validators_hash": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "version": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "app": {
                                            "type": "integer"
                                        },
                                        "block": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "validator_set": {
                            "additionalProperties": false,
                            "properties": {
                                "proposer": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "address": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        },
                                        "proposer_priority": {
                                            "type": "integer"
                                        },
                                        "pub_key": {
                                            "additionalProperties": true
                                        },
                                        "voting_power": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                },
                                "validators": {
                                    "items": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "address": {
                                                "media": {
                                                    "binaryEncoding": "base64"
                                                },
                                                "type": "string"
                                            },
                                            "proposer_priority": {
                                                "type": "integer"
                                            },
                                            "pub_key": {
                                                "additionalProperties": true
                                            },
                                            "voting_power": {
                                                "type": "integer"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Source of the default service's implementation of this method.",
                "url": "https://github.com/celestiaorg/celestia-node/blob/main/nodebuilder/header/header.go#L70"
            }
        },
        {
            "name": "header.GetByHeight",
            "description": "Auth level: read",
            "summary": "GetByHeight returns the ExtendedHeader at the given height if it is\ncurrently available.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "u",
                    "description": "uint64",
                    "summary": "",
                    "schema": {
                        "examples": [
                            42
                        ],
                        "type": [
                            "integer"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*header.ExtendedHeader",
                "description": "*header.ExtendedHeader",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "header": {
                                "version": {
                                    "block": "11"
                                },
                                "chain_id": "arabica-6",
                                "height": "67374",
                                "time": "2023-02-25T12:10:28.067566292Z",
                                "last_block_id": {
                                    "hash": "47A2C7758760988500B2F043D3903BBBF1C8B383CA33CF7056AA45E22055663E",
                                    "parts": {
                                        "total": 1,
                                        "hash": "33B012F244E27672169DD3D62CDBC92DA9486E410A5530F41FE6A890D8E2EE42"
                                    }
                                },
                                "last_commit_hash": "888D47F5E9473501C99F2B6136B6B9FFBC9D1CD2F54002BCD5DF002FFEF0A83D",
                                "data_hash": "257760461993F8F197B421EC7435F3C36C3734923E3DA9A42DC73B05F07B3D08",
                                "validators_hash": "883A0C92B8D976312B249C1397E73CF2981A9EB715717CBEE3800B8380C22C1D",
                                "next_validators_hash": "883A0C92B8D976312B249C1397E73CF2981A9EB715717CBEE3800B8380C22C1D",
                                "consensus_hash": "048091BC7DDC283F77BFBF91D73C44DA58C3DF8A9CBC867405D8B7F3DAADA22F",
                                "app_hash": "1FC70854A185737C7FD720FCCE9167876EE4B9ABE23DB1EBB8C552D3E3978435",
                                "last_results_hash": "E3B0C44298FC1C149AFBF4C8996FB92427AE41E4649B934CA495991B7852B855",
                                "evidence_hash": "E3B0C44298FC1C149AFBF4C8996FB92427AE41E4649B934CA495991B7852B855",
                                "proposer_address": "57DC09D28388DBF977CFC30EF50BE8B644CCC1FA"
                            },
                            "validator_set": {
                                "validators": [
                                    {
                                        "address": "57DC09D28388DBF977CFC30EF50BE8B644CCC1FA",
                                        "pub_key": {
                                            "type": "tendermint/PubKeyEd25519",
                                            "value": "aoB4xU9//HAqOP9ciyp0+PTdZxt/UGKgZOabU6JxW8o="
                                        },
                                        "voting_power": "5000000000",
                                        "proposer_priority": "0"
                                    }
                                ],
                                "proposer": {
                                    "address": "57DC09D28388DBF977CFC30EF50BE8B644CCC1FA",
                                    "pub_key": {
                                        "type": "tendermint/PubKeyEd25519",
                                        "value": "aoB4xU9//HAqOP9ciyp0+PTdZxt/UGKgZOabU6JxW8o="
                                    },
                                    "voting_power": "5000000000",
                                    "proposer_priority": "0"
                                }
                            },
                            "commit": {
                                "height": 67374,
                                "round": 0,
                                "block_id": {
                                    "hash": "A7F6B1CF33313121539206754A73FDC22ADA48C4AA8C4BB4F707ED2E089E59D3",
                                    "parts": {
                                        "total": 1,
                                        "hash": "6634FE1E1DDDCB9914ACE81F146013986F5FDA03A8F1C16DC5ECA0D9B0E08FBC"
                                    }
                                },
                                "signatures": [
                                    {
                                        "block_id_flag": 2,
                                        "validator_address": "57DC09D28388DBF977CFC30EF50BE8B644CCC1FA",
                                        "timestamp": "2023-02-25T12:10:38.130121476Z",
                                        "signature": "HyR/uRIUNc5GNqQteZyrVjJM47SI9sRAgrLsNqJDls3AzbvHUfN4zzWyw0afyEvNm98Bm2GIoJoZC5D8oQvdBA=="
                                    }
                                ]
                            },
                            "dah": {
                                "row_roots": [
                                    "//////////7//////////ql+/VFmJ8PWE9BcjrTDLrY/hzVeGdzFCpfEhiXDXZmt",
                                    "/////////////////////zHeGnUtPJn8QyPpePSYl4qRVrcUvG2fwptyoA85Myik"
                                ],
                                "column_roots": [
                                    "//////////7//////////ql+/VFmJ8PWE9BcjrTDLrY/hzVeGdzFCpfEhiXDXZmt",
                                    "/////////////////////zHeGnUtPJn8QyPpePSYl4qRVrcUvG2fwptyoA85Myik"
                                ]
                            }
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "commit": {
                            "additionalProperties": false,
                            "properties": {
                                "block_id": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "hash": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        },
                                        "parts": {
                                            "additionalProperties": false,
                                            "properties": {
                                                "hash": {
                                                    "media": {
                                                        "binaryEncoding": "base64"
                                                    },
                                                    "type": "string"
                                                },
                                                "total": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "height": {
                                    "type": "integer"
                                },
                                "round": {
                                    "type": "integer"
                                },
                                "signatures": {
                                    "items": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "block_id_flag": {
                                                "type": "integer"
                                            },
                                            "signature": {
                                                "media": {
                                                    "binaryEncoding": "base64"
                                                },
                                                "type": "string"
                                            },
                                            "timestamp": {
                                                "format": "date-time",
                                                "type": "string"
                                            },
                                            "validator_address": {
                                                "media": {
                                                    "binaryEncoding": "base64"
                                                },
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "dah": {
                            "additionalProperties": false,
                            "properties": {
                                "column_roots": {
                                    "items": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "row_roots": {
                                    "items": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "header": {
                            "additionalProperties": false,
                            "properties": {
                                "app_hash": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "chain_id": {
                                    "type": "string"
                                },
                                "consensus_hash": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "data_hash": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "evidence_hash": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "height": {
                                    "type": "integer"
                                },
                                "last_block_id": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "hash": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        },
                                        "parts": {
                                            "additionalProperties": false,
                                            "properties": {
                                                "hash": {
                                                    "media": {
                                                        "binaryEncoding": "base64"
                                                    },
                                                    "type": "string"
                                                },
                                                "total": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "last_commit_hash": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "last_results_hash": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "next_validators_hash": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "proposer_address": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "time": {
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "validators_hash": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "version": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "app": {
                                            "type": "integer"
                                        },
                                        "block": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "validator_set": {
                            "additionalProperties": false,
                            "properties": {
                                "proposer": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "address": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        },
                                        "proposer_priority": {
                                            "type": "integer"
                                        },
                                        "pub_key": {
                                            "additionalProperties": true
                                        },
                                        "voting_power": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                },
                                "validators": {
                                    "items": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "address": {
                                                "media": {
                                                    "binaryEncoding": "base64"
                                                },
                                                "type": "string"
                                            },
                                            "proposer_priority": {
                                                "type": "integer"
                                            },
                                            "pub_key": {
                                                "additionalProperties": true
                                            },
                                            "voting_power": {
                                                "type": "integer"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Source of the default service's implementation of this method.",
                "url": "https://github.com/celestiaorg/celestia-node/blob/main/nodebuilder/header/header.go#L82"
            }
        },
        {
            "name": "header.GetRangeByHeight",
            "description": "Auth level: read",
            "summary": "GetRangeByHeight returns the given range (from:to) of ExtendedHeaders\nfrom the node's header store and verifies that the returned headers are\nadjacent to each other.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "from",
                    "description": "*header.ExtendedHeader",
                    "summary": "",
                    "schema": {
                        "examples": [
                            {
                                "header": {
                                    "version": {
                                        "block": "11"
                                    },
                                    "chain_id": "arabica-6",
                                    "height": "67374",
                                    "time": "2023-02-25T12:10:28.067566292Z",
                                    "last_block_id": {
                                        "hash": "47A2C7758760988500B2F043D3903BBBF1C8B383CA33CF7056AA45E22055663E",
                                        "parts": {
                                            "total": 1,
                                            "hash": "33B012F244E27672169DD3D62CDBC92DA9486E410A5530F41FE6A890D8E2EE42"
                                        }
                                    },
                                    "last_commit_hash": "888D47F5E9473501C99F2B6136B6B9FFBC9D1CD2F54002BCD5DF002FFEF0A83D",
                                    "data_hash": "257760461993F8F197B421EC7435F3C36C3734923E3DA9A42DC73B05F07B3D08",
                                    "validators_hash": "883A0C92B8D976312B249C1397E73CF2981A9EB715717CBEE3800B8380C22C1D",
                                    "next_validators_hash": "883A0C92B8D976312B249C1397E73CF2981A9EB715717CBEE3800B8380C22C1D",
                                    "consensus_hash": "048091BC7DDC283F77BFBF91D73C44DA58C3DF8A9CBC867405D8B7F3DAADA22F",
                                    "app_hash": "1FC70854A185737C7FD720FCCE9167876EE4B9ABE23DB1EBB8C552D3E3978435",
                                    "last_results_hash": "E3B0C44298FC1C149AFBF4C8996FB92427AE41E4649B934CA495991B7852B855",
                                    "evidence_hash": "E3B0C44298FC1C149AFBF4C8996FB92427AE41E4649B934CA495991B7852B855",
                                    "proposer_address": "57DC09D28388DBF977CFC30EF50BE8B644CCC1FA"
                                },
                                "validator_set": {
                                    "validators": [
                                        {
                                            "address": "57DC09D28388DBF977CFC30EF50BE8B644CCC1FA",
                                            "pub_key": {
                                                "type": "tendermint/PubKeyEd25519",
                                                "value": "aoB4xU9//HAqOP9ciyp0+PTdZxt/UGKgZOabU6JxW8o="
                                            },
                                            "voting_power": "5000000000",
                                            "proposer_priority": "0"
                                        }
                                    ],
                                    "proposer": {
                                        "address": "57DC09D28388DBF977CFC30EF50BE8B644CCC1FA",
                                        "pub_key": {
                                            "type": "tendermint/PubKeyEd25519",
                                            "value": "aoB4xU9//HAqOP9ciyp0+PTdZxt/UGKgZOabU6JxW8o="
                                        },
                                        "voting_power": "5000000000",
                                        "proposer_priority": "0"
                                    }
                                },
                                "commit": {
                                    "height": 67374,
                                    "round": 0,
                                    "block_id": {
                                        "hash": "A7F6B1CF33313121539206754A73FDC22ADA48C4AA8C4BB4F707ED2E089E59D3",
                                        "parts": {
                                            "total": 1,
                                            "hash": "6634FE1E1DDDCB9914ACE81F146013986F5FDA03A8F1C16DC5ECA0D9B0E08FBC"
                                        }
                                    },
                                    "signatures": [
                                        {
                                            "block_id_flag": 2,
                                            "validator_address": "57DC09D28388DBF977CFC30EF50BE8B644CCC1FA",
                                            "timestamp": "2023-02-25T12:10:38.130121476Z",
                                            "signature": "HyR/uRIUNc5GNqQteZyrVjJM47SI9sRAgrLsNqJDls3AzbvHUfN4zzWyw0afyEvNm98Bm2GIoJoZC5D8oQvdBA=="
                                        }
                                    ]
                                },
                                "dah": {
                                    "row_roots": [
                                        "//////////7//////////ql+/VFmJ8PWE9BcjrTDLrY/hzVeGdzFCpfEhiXDXZmt",
                                        "/////////////////////zHeGnUtPJn8QyPpePSYl4qRVrcUvG2fwptyoA85Myik"
                                    ],
                                    "column_roots": [
                                        "//////////7//////////ql+/VFmJ8PWE9BcjrTDLrY/hzVeGdzFCpfEhiXDXZmt",
                                        "/////////////////////zHeGnUtPJn8QyPpePSYl4qRVrcUvG2fwptyoA85Myik"
                                    ]
                                }
                            }
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "commit": {
                                "additionalProperties": false,
                                "properties": {
                                    "block_id": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "hash": {
                                                "media": {
                                                    "binaryEncoding": "base64"
                                                },
                                                "type": "string"
                                            },
                                            "parts": {
                                                "additionalProperties": false,
                                                "properties": {
                                                    "hash": {
                                                        "media": {
                                                            "binaryEncoding": "base64"
                                                        },
                                                        "type": "string"
                                                    },
                                                    "total": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "height": {
                                        "type": "integer"
                                    },
                                    "round": {
                                        "type": "integer"
                                    },
                                    "signatures": {
                                        "items": {
                                            "additionalProperties": false,
                                            "properties": {
                                                "block_id_flag": {
                                                    "type": "integer"
                                                },
                                                "signature": {
                                                    "media": {
                                                        "binaryEncoding": "base64"
                                                    },
                                                    "type": "string"
                                                },
                                                "timestamp": {
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "validator_address": {
                                                    "media": {
                                                        "binaryEncoding": "base64"
                                                    },
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            },
                            "dah": {
                                "additionalProperties": false,
                                "properties": {
                                    "column_roots": {
                                        "items": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "row_roots": {
                                        "items": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            },
                            "header": {
                                "additionalProperties": false,
                                "properties": {
                                    "app_hash": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    },
                                    "chain_id": {
                                        "type": "string"
                                    },
                                    "consensus_hash": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    },
                                    "data_hash": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    },
                                    "evidence_hash": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    },
                                    "height": {
                                        "type": "integer"
                                    },
                                    "last_block_id": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "hash": {
                                                "media": {
                                                    "binaryEncoding": "base64"
                                                },
                                                "type": "string"
                                            },
                                            "parts": {
                                                "additionalProperties": false,
                                                "properties": {
                                                    "hash": {
                                                        "media": {
                                                            "binaryEncoding": "base64"
                                                        },
                                                        "type": "string"
                                                    },
                                                    "total": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "last_commit_hash": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    },
                                    "last_results_hash": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    },
                                    "next_validators_hash": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    },
                                    "proposer_address": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    },
                                    "time": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "validators_hash": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    },
                                    "version": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "app": {
                                                "type": "integer"
                                            },
                                            "block": {
                                                "type": "integer"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            },
                            "validator_set": {
                                "additionalProperties": false,
                                "properties": {
                                    "proposer": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "address": {
                                                "media": {
                                                    "binaryEncoding": "base64"
                                                },
                                                "type": "string"
                                            },
                                            "proposer_priority": {
                                                "type": "integer"
                                            },
                                            "pub_key": {
                                                "additionalProperties": true
                                            },
                                            "voting_power": {
                                                "type": "integer"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "validators": {
                                        "items": {
                                            "additionalProperties": false,
                                            "properties": {
                                                "address": {
                                                    "media": {
                                                        "binaryEncoding": "base64"
                                                    },
                                                    "type": "string"
                                                },
                                                "proposer_priority": {
                                                    "type": "integer"
                                                },
                                                "pub_key": {
                                                    "additionalProperties": true
                                                },
                                                "voting_power": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "to",
                    "description": "uint64",
                    "summary": "",
                    "schema": {
                        "examples": [
                            42
                        ],
                        "type": [
                            "integer"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "[]*header.ExtendedHeader",
                "description": "[]*header.ExtendedHeader",
                "summary": "",
                "schema": {
                    "examples": [
                        [
                            {
                                "header": {
                                    "version": {
                                        "block": "11"
                                    },
                                    "chain_id": "arabica-6",
                                    "height": "67374",
                                    "time": "2023-02-25T12:10:28.067566292Z",
                                    "last_block_id": {
                                        "hash": "47A2C7758760988500B2F043D3903BBBF1C8B383CA33CF7056AA45E22055663E",
                                        "parts": {
                                            "total": 1,
                                            "hash": "33B012F244E27672169DD3D62CDBC92DA9486E410A5530F41FE6A890D8E2EE42"
                                        }
                                    },
                                    "last_commit_hash": "888D47F5E9473501C99F2B6136B6B9FFBC9D1CD2F54002BCD5DF002FFEF0A83D",
                                    "data_hash": "257760461993F8F197B421EC7435F3C36C3734923E3DA9A42DC73B05F07B3D08",
                                    "validators_hash": "883A0C92B8D976312B249C1397E73CF2981A9EB715717CBEE3800B8380C22C1D",
                                    "next_validators_hash": "883A0C92B8D976312B249C1397E73CF2981A9EB715717CBEE3800B8380C22C1D",
                                    "consensus_hash": "048091BC7DDC283F77BFBF91D73C44DA58C3DF8A9CBC867405D8B7F3DAADA22F",
                                    "app_hash": "1FC70854A185737C7FD720FCCE9167876EE4B9ABE23DB1EBB8C552D3E3978435",
                                    "last_results_hash": "E3B0C44298FC1C149AFBF4C8996FB92427AE41E4649B934CA495991B7852B855",
                                    "evidence_hash": "E3B0C44298FC1C149AFBF4C8996FB92427AE41E4649B934CA495991B7852B855",
                                    "proposer_address": "57DC09D28388DBF977CFC30EF50BE8B644CCC1FA"
                                },
                                "validator_set": {
                                    "validators": [
                                        {
                                            "address": "57DC09D28388DBF977CFC30EF50BE8B644CCC1FA",
                                            "pub_key": {
                                                "type": "tendermint/PubKeyEd25519",
                                                "value": "aoB4xU9//HAqOP9ciyp0+PTdZxt/UGKgZOabU6JxW8o="
                                            },
                                            "voting_power": "5000000000",
                                            "proposer_priority": "0"
                                        }
                                    ],
                                    "proposer": {
                                        "address": "57DC09D28388DBF977CFC30EF50BE8B644CCC1FA",
                                        "pub_key": {
                                            "type": "tendermint/PubKeyEd25519",
                                            "value": "aoB4xU9//HAqOP9ciyp0+PTdZxt/UGKgZOabU6JxW8o="
                                        },
                                        "voting_power": "5000000000",
                                        "proposer_priority": "0"
                                    }
                                },
                                "commit": {
                                    "height": 67374,
                                    "round": 0,
                                    "block_id": {
                                        "hash": "A7F6B1CF33313121539206754A73FDC22ADA48C4AA8C4BB4F707ED2E089E59D3",
                                        "parts": {
                                            "total": 1,
                                            "hash": "6634FE1E1DDDCB9914ACE81F146013986F5FDA03A8F1C16DC5ECA0D9B0E08FBC"
                                        }
                                    },
                                    "signatures": [
                                        {
                                            "block_id_flag": 2,
                                            "validator_address": "57DC09D28388DBF977CFC30EF50BE8B644CCC1FA",
                                            "timestamp": "2023-02-25T12:10:38.130121476Z",
                                            "signature": "HyR/uRIUNc5GNqQteZyrVjJM47SI9sRAgrLsNqJDls3AzbvHUfN4zzWyw0afyEvNm98Bm2GIoJoZC5D8oQvdBA=="
                                        }
                                    ]
                                },
                                "dah": {
                                    "row_roots": [
                                        "//////////7//////////ql+/VFmJ8PWE9BcjrTDLrY/hzVeGdzFCpfEhiXDXZmt",
                                        "/////////////////////zHeGnUtPJn8QyPpePSYl4qRVrcUvG2fwptyoA85Myik"
                                    ],
                                    "column_roots": [
                                        "//////////7//////////ql+/VFmJ8PWE9BcjrTDLrY/hzVeGdzFCpfEhiXDXZmt",
                                        "/////////////////////zHeGnUtPJn8QyPpePSYl4qRVrcUvG2fwptyoA85Myik"
                                    ]
                                }
                            }
                        ]
                    ],
                    "items": [
                        {
                            "additionalProperties": false,
                            "properties": {
                                "commit": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "block_id": {
                                            "additionalProperties": false,
                                            "properties": {
                                                "hash": {
                                                    "media": {
                                                        "binaryEncoding": "base64"
                                                    },
                                                    "type": "string"
                                                },
                                                "parts": {
                                                    "additionalProperties": false,
                                                    "properties": {
                                                        "hash": {
                                                            "media": {
                                                                "binaryEncoding": "base64"
                                                            },
                                                            "type": "string"
                                                        },
                                                        "total": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "height": {
                                            "type": "integer"
                                        },
                                        "round": {
                                            "type": "integer"
                                        },
                                        "signatures": {
                                            "items": {
                                                "additionalProperties": false,
                                                "properties": {
                                                    "block_id_flag": {
                                                        "type": "integer"
                                                    },
                                                    "signature": {
                                                        "media": {
                                                            "binaryEncoding": "base64"
                                                        },
                                                        "type": "string"
                                                    },
                                                    "timestamp": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "validator_address": {
                                                        "media": {
                                                            "binaryEncoding": "base64"
                                                        },
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                },
                                "dah": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "column_roots": {
                                            "items": {
                                                "media": {
                                                    "binaryEncoding": "base64"
                                                },
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "row_roots": {
                                            "items": {
                                                "media": {
                                                    "binaryEncoding": "base64"
                                                },
                                                "type": "string"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                },
                                "header": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "app_hash": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        },
                                        "chain_id": {
                                            "type": "string"
                                        },
                                        "consensus_hash": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        },
                                        "data_hash": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        },
                                        "evidence_hash": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        },
                                        "height": {
                                            "type": "integer"
                                        },
                                        "last_block_id": {
                                            "additionalProperties": false,
                                            "properties": {
                                                "hash": {
                                                    "media": {
                                                        "binaryEncoding": "base64"
                                                    },
                                                    "type": "string"
                                                },
                                                "parts": {
                                                    "additionalProperties": false,
                                                    "properties": {
                                                        "hash": {
                                                            "media": {
                                                                "binaryEncoding": "base64"
                                                            },
                                                            "type": "string"
                                                        },
                                                        "total": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "last_commit_hash": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        },
                                        "last_results_hash": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        },
                                        "next_validators_hash": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        },
                                        "proposer_address": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        },
                                        "time": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "validators_hash": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        },
                                        "version": {
                                            "additionalProperties": false,
                                            "properties": {
                                                "app": {
                                                    "type": "integer"
                                                },
                                                "block": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "validator_set": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "proposer": {
                                            "additionalProperties": false,
                                            "properties": {
                                                "address": {
                                                    "media": {
                                                        "binaryEncoding": "base64"
                                                    },
                                                    "type": "string"
                                                },
                                                "proposer_priority": {
                                                    "type": "integer"
                                                },
                                                "pub_key": {
                                                    "additionalProperties": true
                                                },
                                                "voting_power": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "validators": {
                                            "items": {
                                                "additionalProperties": false,
                                                "properties": {
                                                    "address": {
                                                        "media": {
                                                            "binaryEncoding": "base64"
                                                        },
                                                        "type": "string"
                                                    },
                                                    "proposer_priority": {
                                                        "type": "integer"
                                                    },
                                                    "pub_key": {
                                                        "additionalProperties": true
                                                    },
                                                    "voting_power": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": [
                                "object"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Source of the default service's implementation of this method.",
                "url": "https://github.com/celestiaorg/celestia-node/blob/main/nodebuilder/header/header.go#L74"
            }
        },
        {
            "name": "header.LocalHead",
            "description": "Auth level: read",
            "summary": "LocalHead returns the ExtendedHeader of the chain head.\n",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "*header.ExtendedHeader",
                "description": "*header.ExtendedHeader",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "header": {
                                "version": {
                                    "block": "11"
                                },
                                "chain_id": "arabica-6",
                                "height": "67374",
                                "time": "2023-02-25T12:10:28.067566292Z",
                                "last_block_id": {
                                    "hash": "47A2C7758760988500B2F043D3903BBBF1C8B383CA33CF7056AA45E22055663E",
                                    "parts": {
                                        "total": 1,
                                        "hash": "33B012F244E27672169DD3D62CDBC92DA9486E410A5530F41FE6A890D8E2EE42"
                                    }
                                },
                                "last_commit_hash": "888D47F5E9473501C99F2B6136B6B9FFBC9D1CD2F54002BCD5DF002FFEF0A83D",
                                "data_hash": "257760461993F8F197B421EC7435F3C36C3734923E3DA9A42DC73B05F07B3D08",
                                "validators_hash": "883A0C92B8D976312B249C1397E73CF2981A9EB715717CBEE3800B8380C22C1D",
                                "next_validators_hash": "883A0C92B8D976312B249C1397E73CF2981A9EB715717CBEE3800B8380C22C1D",
                                "consensus_hash": "048091BC7DDC283F77BFBF91D73C44DA58C3DF8A9CBC867405D8B7F3DAADA22F",
                                "app_hash": "1FC70854A185737C7FD720FCCE9167876EE4B9ABE23DB1EBB8C552D3E3978435",
                                "last_results_hash": "E3B0C44298FC1C149AFBF4C8996FB92427AE41E4649B934CA495991B7852B855",
                                "evidence_hash": "E3B0C44298FC1C149AFBF4C8996FB92427AE41E4649B934CA495991B7852B855",
                                "proposer_address": "57DC09D28388DBF977CFC30EF50BE8B644CCC1FA"
                            },
                            "validator_set": {
                                "validators": [
                                    {
                                        "address": "57DC09D28388DBF977CFC30EF50BE8B644CCC1FA",
                                        "pub_key": {
                                            "type": "tendermint/PubKeyEd25519",
                                            "value": "aoB4xU9//HAqOP9ciyp0+PTdZxt/UGKgZOabU6JxW8o="
                                        },
                                        "voting_power": "5000000000",
                                        "proposer_priority": "0"
                                    }
                                ],
                                "proposer": {
                                    "address": "57DC09D28388DBF977CFC30EF50BE8B644CCC1FA",
                                    "pub_key": {
                                        "type": "tendermint/PubKeyEd25519",
                                        "value": "aoB4xU9//HAqOP9ciyp0+PTdZxt/UGKgZOabU6JxW8o="
                                    },
                                    "voting_power": "5000000000",
                                    "proposer_priority": "0"
                                }
                            },
                            "commit": {
                                "height": 67374,
                                "round": 0,
                                "block_id": {
                                    "hash": "A7F6B1CF33313121539206754A73FDC22ADA48C4AA8C4BB4F707ED2E089E59D3",
                                    "parts": {
                                        "total": 1,
                                        "hash": "6634FE1E1DDDCB9914ACE81F146013986F5FDA03A8F1C16DC5ECA0D9B0E08FBC"
                                    }
                                },
                                "signatures": [
                                    {
                                        "block_id_flag": 2,
                                        "validator_address": "57DC09D28388DBF977CFC30EF50BE8B644CCC1FA",
                                        "timestamp": "2023-02-25T12:10:38.130121476Z",
                                        "signature": "HyR/uRIUNc5GNqQteZyrVjJM47SI9sRAgrLsNqJDls3AzbvHUfN4zzWyw0afyEvNm98Bm2GIoJoZC5D8oQvdBA=="
                                    }
                                ]
                            },
                            "dah": {
                                "row_roots": [
                                    "//////////7//////////ql+/VFmJ8PWE9BcjrTDLrY/hzVeGdzFCpfEhiXDXZmt",
                                    "/////////////////////zHeGnUtPJn8QyPpePSYl4qRVrcUvG2fwptyoA85Myik"
                                ],
                                "column_roots": [
                                    "//////////7//////////ql+/VFmJ8PWE9BcjrTDLrY/hzVeGdzFCpfEhiXDXZmt",
                                    "/////////////////////zHeGnUtPJn8QyPpePSYl4qRVrcUvG2fwptyoA85Myik"
                                ]
                            }
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "commit": {
                            "additionalProperties": false,
                            "properties": {
                                "block_id": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "hash": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        },
                                        "parts": {
                                            "additionalProperties": false,
                                            "properties": {
                                                "hash": {
                                                    "media": {
                                                        "binaryEncoding": "base64"
                                                    },
                                                    "type": "string"
                                                },
                                                "total": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "height": {
                                    "type": "integer"
                                },
                                "round": {
                                    "type": "integer"
                                },
                                "signatures": {
                                    "items": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "block_id_flag": {
                                                "type": "integer"
                                            },
                                            "signature": {
                                                "media": {
                                                    "binaryEncoding": "base64"
                                                },
                                                "type": "string"
                                            },
                                            "timestamp": {
                                                "format": "date-time",
                                                "type": "string"
                                            },
                                            "validator_address": {
                                                "media": {
                                                    "binaryEncoding": "base64"
                                                },
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "dah": {
                            "additionalProperties": false,
                            "properties": {
                                "column_roots": {
                                    "items": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "row_roots": {
                                    "items": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "header": {
                            "additionalProperties": false,
                            "properties": {
                                "app_hash": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "chain_id": {
                                    "type": "string"
                                },
                                "consensus_hash": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "data_hash": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "evidence_hash": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "height": {
                                    "type": "integer"
                                },
                                "last_block_id": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "hash": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        },
                                        "parts": {
                                            "additionalProperties": false,
                                            "properties": {
                                                "hash": {
                                                    "media": {
                                                        "binaryEncoding": "base64"
                                                    },
                                                    "type": "string"
                                                },
                                                "total": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "last_commit_hash": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "last_results_hash": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "next_validators_hash": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "proposer_address": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "time": {
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "validators_hash": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "version": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "app": {
                                            "type": "integer"
                                        },
                                        "block": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "validator_set": {
                            "additionalProperties": false,
                            "properties": {
                                "proposer": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "address": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        },
                                        "proposer_priority": {
                                            "type": "integer"
                                        },
                                        "pub_key": {
                                            "additionalProperties": true
                                        },
                                        "voting_power": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                },
                                "validators": {
                                    "items": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "address": {
                                                "media": {
                                                    "binaryEncoding": "base64"
                                                },
                                                "type": "string"
                                            },
                                            "proposer_priority": {
                                                "type": "integer"
                                            },
                                            "pub_key": {
                                                "additionalProperties": true
                                            },
                                            "voting_power": {
                                                "type": "integer"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Source of the default service's implementation of this method.",
                "url": "https://github.com/celestiaorg/celestia-node/blob/main/nodebuilder/header/header.go#L90"
            }
        },
        {
            "name": "header.NetworkHead",
            "description": "Auth level: read",
            "summary": "NetworkHead provides the Syncer's view of the current network head.\n",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "*header.ExtendedHeader",
                "description": "*header.ExtendedHeader",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "header": {
                                "version": {
                                    "block": "11"
                                },
                                "chain_id": "arabica-6",
                                "height": "67374",
                                "time": "2023-02-25T12:10:28.067566292Z",
                                "last_block_id": {
                                    "hash": "47A2C7758760988500B2F043D3903BBBF1C8B383CA33CF7056AA45E22055663E",
                                    "parts": {
                                        "total": 1,
                                        "hash": "33B012F244E27672169DD3D62CDBC92DA9486E410A5530F41FE6A890D8E2EE42"
                                    }
                                },
                                "last_commit_hash": "888D47F5E9473501C99F2B6136B6B9FFBC9D1CD2F54002BCD5DF002FFEF0A83D",
                                "data_hash": "257760461993F8F197B421EC7435F3C36C3734923E3DA9A42DC73B05F07B3D08",
                                "validators_hash": "883A0C92B8D976312B249C1397E73CF2981A9EB715717CBEE3800B8380C22C1D",
                                "next_validators_hash": "883A0C92B8D976312B249C1397E73CF2981A9EB715717CBEE3800B8380C22C1D",
                                "consensus_hash": "048091BC7DDC283F77BFBF91D73C44DA58C3DF8A9CBC867405D8B7F3DAADA22F",
                                "app_hash": "1FC70854A185737C7FD720FCCE9167876EE4B9ABE23DB1EBB8C552D3E3978435",
                                "last_results_hash": "E3B0C44298FC1C149AFBF4C8996FB92427AE41E4649B934CA495991B7852B855",
                                "evidence_hash": "E3B0C44298FC1C149AFBF4C8996FB92427AE41E4649B934CA495991B7852B855",
                                "proposer_address": "57DC09D28388DBF977CFC30EF50BE8B644CCC1FA"
                            },
                            "validator_set": {
                                "validators": [
                                    {
                                        "address": "57DC09D28388DBF977CFC30EF50BE8B644CCC1FA",
                                        "pub_key": {
                                            "type": "tendermint/PubKeyEd25519",
                                            "value": "aoB4xU9//HAqOP9ciyp0+PTdZxt/UGKgZOabU6JxW8o="
                                        },
                                        "voting_power": "5000000000",
                                        "proposer_priority": "0"
                                    }
                                ],
                                "proposer": {
                                    "address": "57DC09D28388DBF977CFC30EF50BE8B644CCC1FA",
                                    "pub_key": {
                                        "type": "tendermint/PubKeyEd25519",
                                        "value": "aoB4xU9//HAqOP9ciyp0+PTdZxt/UGKgZOabU6JxW8o="
                                    },
                                    "voting_power": "5000000000",
                                    "proposer_priority": "0"
                                }
                            },
                            "commit": {
                                "height": 67374,
                                "round": 0,
                                "block_id": {
                                    "hash": "A7F6B1CF33313121539206754A73FDC22ADA48C4AA8C4BB4F707ED2E089E59D3",
                                    "parts": {
                                        "total": 1,
                                        "hash": "6634FE1E1DDDCB9914ACE81F146013986F5FDA03A8F1C16DC5ECA0D9B0E08FBC"
                                    }
                                },
                                "signatures": [
                                    {
                                        "block_id_flag": 2,
                                        "validator_address": "57DC09D28388DBF977CFC30EF50BE8B644CCC1FA",
                                        "timestamp": "2023-02-25T12:10:38.130121476Z",
                                        "signature": "HyR/uRIUNc5GNqQteZyrVjJM47SI9sRAgrLsNqJDls3AzbvHUfN4zzWyw0afyEvNm98Bm2GIoJoZC5D8oQvdBA=="
                                    }
                                ]
                            },
                            "dah": {
                                "row_roots": [
                                    "//////////7//////////ql+/VFmJ8PWE9BcjrTDLrY/hzVeGdzFCpfEhiXDXZmt",
                                    "/////////////////////zHeGnUtPJn8QyPpePSYl4qRVrcUvG2fwptyoA85Myik"
                                ],
                                "column_roots": [
                                    "//////////7//////////ql+/VFmJ8PWE9BcjrTDLrY/hzVeGdzFCpfEhiXDXZmt",
                                    "/////////////////////zHeGnUtPJn8QyPpePSYl4qRVrcUvG2fwptyoA85Myik"
                                ]
                            }
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "commit": {
                            "additionalProperties": false,
                            "properties": {
                                "block_id": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "hash": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        },
                                        "parts": {
                                            "additionalProperties": false,
                                            "properties": {
                                                "hash": {
                                                    "media": {
                                                        "binaryEncoding": "base64"
                                                    },
                                                    "type": "string"
                                                },
                                                "total": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "height": {
                                    "type": "integer"
                                },
                                "round": {
                                    "type": "integer"
                                },
                                "signatures": {
                                    "items": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "block_id_flag": {
                                                "type": "integer"
                                            },
                                            "signature": {
                                                "media": {
                                                    "binaryEncoding": "base64"
                                                },
                                                "type": "string"
                                            },
                                            "timestamp": {
                                                "format": "date-time",
                                                "type": "string"
                                            },
                                            "validator_address": {
                                                "media": {
                                                    "binaryEncoding": "base64"
                                                },
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "dah": {
                            "additionalProperties": false,
                            "properties": {
                                "column_roots": {
                                    "items": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "row_roots": {
                                    "items": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "header": {
                            "additionalProperties": false,
                            "properties": {
                                "app_hash": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "chain_id": {
                                    "type": "string"
                                },
                                "consensus_hash": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "data_hash": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "evidence_hash": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "height": {
                                    "type": "integer"
                                },
                                "last_block_id": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "hash": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        },
                                        "parts": {
                                            "additionalProperties": false,
                                            "properties": {
                                                "hash": {
                                                    "media": {
                                                        "binaryEncoding": "base64"
                                                    },
                                                    "type": "string"
                                                },
                                                "total": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "last_commit_hash": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "last_results_hash": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "next_validators_hash": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "proposer_address": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "time": {
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "validators_hash": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "version": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "app": {
                                            "type": "integer"
                                        },
                                        "block": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "validator_set": {
                            "additionalProperties": false,
                            "properties": {
                                "proposer": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "address": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        },
                                        "proposer_priority": {
                                            "type": "integer"
                                        },
                                        "pub_key": {
                                            "additionalProperties": true
                                        },
                                        "voting_power": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                },
                                "validators": {
                                    "items": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "address": {
                                                "media": {
                                                    "binaryEncoding": "base64"
                                                },
                                                "type": "string"
                                            },
                                            "proposer_priority": {
                                                "type": "integer"
                                            },
                                            "pub_key": {
                                                "additionalProperties": true
                                            },
                                            "voting_power": {
                                                "type": "integer"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Source of the default service's implementation of this method.",
                "url": "https://github.com/celestiaorg/celestia-node/blob/main/nodebuilder/header/header.go#L102"
            }
        },
        {
            "name": "header.Subscribe",
            "description": "Auth level: read",
            "summary": "Subscribe to recent ExtendedHeaders from the network.\n",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "\u003c-chan *header.ExtendedHeader",
                "description": "\u003c-chan *header.ExtendedHeader",
                "summary": "",
                "schema": {
                    "title": "typeUnsupportedByJSONSchema",
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Source of the default service's implementation of this method.",
                "url": "https://github.com/celestiaorg/celestia-node/blob/main/nodebuilder/header/header.go#L106"
            }
        },
        {
            "name": "header.SyncState",
            "description": "Auth level: read",
            "summary": "SyncState returns the current state of the header Syncer.\n",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "sync.State",
                "description": "sync.State",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "id": 42,
                            "height": 42,
                            "from_height": 42,
                            "to_height": 42,
                            "from_hash": "453D0BC3CB88A2ED6F2E06021383B22C72D25D7741AE51B4CAE1AD34D72A3F07",
                            "to_hash": "453D0BC3CB88A2ED6F2E06021383B22C72D25D7741AE51B4CAE1AD34D72A3F07",
                            "start": "0001-01-01T00:00:00Z",
                            "end": "0001-01-01T00:00:00Z",
                            "error": "string value"
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "end": {
                            "format": "date-time",
                            "type": "string"
                        },
                        "error": {
                            "type": "string"
                        },
                        "from_hash": {
                            "media": {
                                "binaryEncoding": "base64"
                            },
                            "type": "string"
                        },
                        "from_height": {
                            "type": "integer"
                        },
                        "height": {
                            "type": "integer"
                        },
                        "id": {
                            "type": "integer"
                        },
                        "start": {
                            "format": "date-time",
                            "type": "string"
                        },
                        "to_hash": {
                            "media": {
                                "binaryEncoding": "base64"
                            },
                            "type": "string"
                        },
                        "to_height": {
                            "type": "integer"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Source of the default service's implementation of this method.",
                "url": "https://github.com/celestiaorg/celestia-node/blob/main/nodebuilder/header/header.go#L94"
            }
        },
        {
            "name": "header.SyncWait",
            "description": "Auth level: read",
            "summary": "SyncWait blocks until the header Syncer is synced to network head.\n",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "Null",
                "description": "Null",
                "schema": {
                    "type": [
                        "null"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Source of the default service's implementation of this method.",
                "url": "https://github.com/celestiaorg/celestia-node/blob/main/nodebuilder/header/header.go#L98"
            }
        },
        {
            "name": "header.WaitForHeight",
            "description": "Auth level: read",
            "summary": "WaitForHeight blocks until the header at the given height has been processed\nby the store or context deadline is exceeded.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "u",
                    "description": "uint64",
                    "summary": "",
                    "schema": {
                        "examples": [
                            42
                        ],
                        "type": [
                            "integer"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*header.ExtendedHeader",
                "description": "*header.ExtendedHeader",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "header": {
                                "version": {
                                    "block": "11"
                                },
                                "chain_id": "arabica-6",
                                "height": "67374",
                                "time": "2023-02-25T12:10:28.067566292Z",
                                "last_block_id": {
                                    "hash": "47A2C7758760988500B2F043D3903BBBF1C8B383CA33CF7056AA45E22055663E",
                                    "parts": {
                                        "total": 1,
                                        "hash": "33B012F244E27672169DD3D62CDBC92DA9486E410A5530F41FE6A890D8E2EE42"
                                    }
                                },
                                "last_commit_hash": "888D47F5E9473501C99F2B6136B6B9FFBC9D1CD2F54002BCD5DF002FFEF0A83D",
                                "data_hash": "257760461993F8F197B421EC7435F3C36C3734923E3DA9A42DC73B05F07B3D08",
                                "validators_hash": "883A0C92B8D976312B249C1397E73CF2981A9EB715717CBEE3800B8380C22C1D",
                                "next_validators_hash": "883A0C92B8D976312B249C1397E73CF2981A9EB715717CBEE3800B8380C22C1D",
                                "consensus_hash": "048091BC7DDC283F77BFBF91D73C44DA58C3DF8A9CBC867405D8B7F3DAADA22F",
                                "app_hash": "1FC70854A185737C7FD720FCCE9167876EE4B9ABE23DB1EBB8C552D3E3978435",
                                "last_results_hash": "E3B0C44298FC1C149AFBF4C8996FB92427AE41E4649B934CA495991B7852B855",
                                "evidence_hash": "E3B0C44298FC1C149AFBF4C8996FB92427AE41E4649B934CA495991B7852B855",
                                "proposer_address": "57DC09D28388DBF977CFC30EF50BE8B644CCC1FA"
                            },
                            "validator_set": {
                                "validators": [
                                    {
                                        "address": "57DC09D28388DBF977CFC30EF50BE8B644CCC1FA",
                                        "pub_key": {
                                            "type": "tendermint/PubKeyEd25519",
                                            "value": "aoB4xU9//HAqOP9ciyp0+PTdZxt/UGKgZOabU6JxW8o="
                                        },
                                        "voting_power": "5000000000",
                                        "proposer_priority": "0"
                                    }
                                ],
                                "proposer": {
                                    "address": "57DC09D28388DBF977CFC30EF50BE8B644CCC1FA",
                                    "pub_key": {
                                        "type": "tendermint/PubKeyEd25519",
                                        "value": "aoB4xU9//HAqOP9ciyp0+PTdZxt/UGKgZOabU6JxW8o="
                                    },
                                    "voting_power": "5000000000",
                                    "proposer_priority": "0"
                                }
                            },
                            "commit": {
                                "height": 67374,
                                "round": 0,
                                "block_id": {
                                    "hash": "A7F6B1CF33313121539206754A73FDC22ADA48C4AA8C4BB4F707ED2E089E59D3",
                                    "parts": {
                                        "total": 1,
                                        "hash": "6634FE1E1DDDCB9914ACE81F146013986F5FDA03A8F1C16DC5ECA0D9B0E08FBC"
                                    }
                                },
                                "signatures": [
                                    {
                                        "block_id_flag": 2,
                                        "validator_address": "57DC09D28388DBF977CFC30EF50BE8B644CCC1FA",
                                        "timestamp": "2023-02-25T12:10:38.130121476Z",
                                        "signature": "HyR/uRIUNc5GNqQteZyrVjJM47SI9sRAgrLsNqJDls3AzbvHUfN4zzWyw0afyEvNm98Bm2GIoJoZC5D8oQvdBA=="
                                    }
                                ]
                            },
                            "dah": {
                                "row_roots": [
                                    "//////////7//////////ql+/VFmJ8PWE9BcjrTDLrY/hzVeGdzFCpfEhiXDXZmt",
                                    "/////////////////////zHeGnUtPJn8QyPpePSYl4qRVrcUvG2fwptyoA85Myik"
                                ],
                                "column_roots": [
                                    "//////////7//////////ql+/VFmJ8PWE9BcjrTDLrY/hzVeGdzFCpfEhiXDXZmt",
                                    "/////////////////////zHeGnUtPJn8QyPpePSYl4qRVrcUvG2fwptyoA85Myik"
                                ]
                            }
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "commit": {
                            "additionalProperties": false,
                            "properties": {
                                "block_id": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "hash": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        },
                                        "parts": {
                                            "additionalProperties": false,
                                            "properties": {
                                                "hash": {
                                                    "media": {
                                                        "binaryEncoding": "base64"
                                                    },
                                                    "type": "string"
                                                },
                                                "total": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "height": {
                                    "type": "integer"
                                },
                                "round": {
                                    "type": "integer"
                                },
                                "signatures": {
                                    "items": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "block_id_flag": {
                                                "type": "integer"
                                            },
                                            "signature": {
                                                "media": {
                                                    "binaryEncoding": "base64"
                                                },
                                                "type": "string"
                                            },
                                            "timestamp": {
                                                "format": "date-time",
                                                "type": "string"
                                            },
                                            "validator_address": {
                                                "media": {
                                                    "binaryEncoding": "base64"
                                                },
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "dah": {
                            "additionalProperties": false,
                            "properties": {
                                "column_roots": {
                                    "items": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "row_roots": {
                                    "items": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "header": {
                            "additionalProperties": false,
                            "properties": {
                                "app_hash": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "chain_id": {
                                    "type": "string"
                                },
                                "consensus_hash": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "data_hash": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "evidence_hash": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "height": {
                                    "type": "integer"
                                },
                                "last_block_id": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "hash": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        },
                                        "parts": {
                                            "additionalProperties": false,
                                            "properties": {
                                                "hash": {
                                                    "media": {
                                                        "binaryEncoding": "base64"
                                                    },
                                                    "type": "string"
                                                },
                                                "total": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "last_commit_hash": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "last_results_hash": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "next_validators_hash": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "proposer_address": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "time": {
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "validators_hash": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "version": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "app": {
                                            "type": "integer"
                                        },
                                        "block": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "validator_set": {
                            "additionalProperties": false,
                            "properties": {
                                "proposer": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "address": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        },
                                        "proposer_priority": {
                                            "type": "integer"
                                        },
                                        "pub_key": {
                                            "additionalProperties": true
                                        },
                                        "voting_power": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                },
                                "validators": {
                                    "items": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "address": {
                                                "media": {
                                                    "binaryEncoding": "base64"
                                                },
                                                "type": "string"
                                            },
                                            "proposer_priority": {
                                                "type": "integer"
                                            },
                                            "pub_key": {
                                                "additionalProperties": true
                                            },
                                            "voting_power": {
                                                "type": "integer"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Source of the default service's implementation of this method.",
                "url": "https://github.com/celestiaorg/celestia-node/blob/main/nodebuilder/header/header.go#L86"
            }
        },
        {
            "name": "node.AuthNew",
            "description": "Auth level: admin",
            "summary": "AuthNew signs and returns a new token with the given permissions.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "perms",
                    "description": "[]auth.Permission",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                "admin"
                            ]
                        ],
                        "items": [
                            {
                                "type": [
                                    "string"
                                ]
                            }
                        ],
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "string",
                "description": "string",
                "summary": "",
                "schema": {
                    "examples": [
                        "string value"
                    ],
                    "type": [
                        "string"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Source of the default service's implementation of this method.",
                "url": "https://github.com/celestiaorg/celestia-node/blob/main/nodebuilder/node/node.go#L61"
            }
        },
        {
            "name": "node.AuthNewWithExpiry",
            "description": "Auth level: admin",
            "summary": "AuthNewWithExpiry signs and returns a new token with the given permissions and TTL.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "perms",
                    "description": "[]auth.Permission",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                "admin"
                            ]
                        ],
                        "items": [
                            {
                                "type": [
                                    "string"
                                ]
                            }
                        ],
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "ttl",
                    "description": "time.Duration",
                    "summary": "",
                    "schema": {
                        "examples": [
                            1000000000
                        ],
                        "type": [
                            "integer"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "string",
                "description": "string",
                "summary": "",
                "schema": {
                    "examples": [
                        "string value"
                    ],
                    "type": [
                        "string"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Source of the default service's implementation of this method.",
                "url": "https://github.com/celestiaorg/celestia-node/blob/main/nodebuilder/node/node.go#L65"
            }
        },
        {
            "name": "node.AuthVerify",
            "description": "Auth level: admin",
            "summary": "AuthVerify returns the permissions assigned to the given token.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "token",
                    "description": "string",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "string value"
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "[]auth.Permission",
                "description": "[]auth.Permission",
                "summary": "",
                "schema": {
                    "examples": [
                        [
                            "admin"
                        ]
                    ],
                    "items": [
                        {
                            "type": [
                                "string"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Source of the default service's implementation of this method.",
                "url": "https://github.com/celestiaorg/celestia-node/blob/main/nodebuilder/node/node.go#L57"
            }
        },
        {
            "name": "node.Info",
            "description": "Auth level: admin",
            "summary": "Info returns administrative information about the node.\n",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "Info",
                "description": "Info",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "type": 3,
                            "api_version": "string value"
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "api_version": {
                            "type": "string"
                        },
                        "type": {
                            "type": "integer"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Source of the default service's implementation of this method.",
                "url": "https://github.com/celestiaorg/celestia-node/blob/main/nodebuilder/node/node.go#L45"
            }
        },
        {
            "name": "node.LogLevelSet",
            "description": "Auth level: admin",
            "summary": "LogLevelSet sets the given component log level to the given level.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "name",
                    "description": "string",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "string value"
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "level",
                    "description": "string",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "string value"
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "Null",
                "description": "Null",
                "schema": {
                    "type": [
                        "null"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Source of the default service's implementation of this method.",
                "url": "https://github.com/celestiaorg/celestia-node/blob/main/nodebuilder/node/node.go#L53"
            }
        },
        {
            "name": "node.Ready",
            "description": "Auth level: read",
            "summary": "Ready returns true once the node's RPC is ready to accept requests.\n",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "bool",
                "description": "bool",
                "summary": "",
                "schema": {
                    "examples": [
                        true
                    ],
                    "type": [
                        "boolean"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Source of the default service's implementation of this method.",
                "url": "https://github.com/celestiaorg/celestia-node/blob/main/nodebuilder/node/node.go#L49"
            }
        },
        {
            "name": "p2p.BandwidthForPeer",
            "description": "Auth level: admin",
            "summary": "BandwidthForPeer returns a Stats struct with bandwidth metrics associated with the given peer.ID.\nThe metrics returned include all traffic sent / received for the peer, regardless of protocol.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "id",
                    "description": "peer.ID",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "CovLVG4fQcqUS6DmoMxAwVJGNW6PMzfwTG6BHW9NH9TLGHcbRfvPVc3JVhnufK3HTzStoTo"
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "metrics.Stats",
                "description": "metrics.Stats",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "TotalIn": 42,
                            "TotalOut": 42,
                            "RateIn": 42,
                            "RateOut": 42
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "RateIn": {
                            "type": "number"
                        },
                        "RateOut": {
                            "type": "number"
                        },
                        "TotalIn": {
                            "type": "integer"
                        },
                        "TotalOut": {
                            "type": "integer"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Source of the default service's implementation of this method.",
                "url": "https://github.com/celestiaorg/celestia-node/blob/main/nodebuilder/p2p/p2p.go#L339"
            }
        },
        {
            "name": "p2p.BandwidthForProtocol",
            "description": "Auth level: admin",
            "summary": "BandwidthForProtocol returns a Stats struct with bandwidth metrics associated with the given\nprotocol.ID.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "proto",
                    "description": "protocol.ID",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "/celestia/mocha/ipfs/bitswap"
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "metrics.Stats",
                "description": "metrics.Stats",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "TotalIn": 42,
                            "TotalOut": 42,
                            "RateIn": 42,
                            "RateOut": 42
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "RateIn": {
                            "type": "number"
                        },
                        "RateOut": {
                            "type": "number"
                        },
                        "TotalIn": {
                            "type": "integer"
                        },
                        "TotalOut": {
                            "type": "integer"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Source of the default service's implementation of this method.",
                "url": "https://github.com/celestiaorg/celestia-node/blob/main/nodebuilder/p2p/p2p.go#L343"
            }
        },
        {
            "name": "p2p.BandwidthStats",
            "description": "Auth level: admin",
            "summary": "BandwidthStats returns a Stats struct with bandwidth metrics for all\ndata sent/received by the local peer, regardless of protocol or remote\npeer IDs.\n",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "metrics.Stats",
                "description": "metrics.Stats",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "TotalIn": 42,
                            "TotalOut": 42,
                            "RateIn": 42,
                            "RateOut": 42
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "RateIn": {
                            "type": "number"
                        },
                        "RateOut": {
                            "type": "number"
                        },
                        "TotalIn": {
                            "type": "integer"
                        },
                        "TotalOut": {
                            "type": "integer"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Source of the default service's implementation of this method.",
                "url": "https://github.com/celestiaorg/celestia-node/blob/main/nodebuilder/p2p/p2p.go#L335"
            }
        },
        {
            "name": "p2p.BlockPeer",
            "description": "Auth level: admin",
            "summary": "BlockPeer adds a peer to the set of blocked peers and\ncloses any existing connection to that peer.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p",
                    "description": "peer.ID",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "CovLVG4fQcqUS6DmoMxAwVJGNW6PMzfwTG6BHW9NH9TLGHcbRfvPVc3JVhnufK3HTzStoTo"
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "Null",
                "description": "Null",
                "schema": {
                    "type": [
                        "null"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Source of the default service's implementation of this method.",
                "url": "https://github.com/celestiaorg/celestia-node/blob/main/nodebuilder/p2p/p2p.go#L311"
            }
        },
        {
            "name": "p2p.ClosePeer",
            "description": "Auth level: admin",
            "summary": "ClosePeer closes the connection to a given peer.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "id",
                    "description": "peer.ID",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "CovLVG4fQcqUS6DmoMxAwVJGNW6PMzfwTG6BHW9NH9TLGHcbRfvPVc3JVhnufK3HTzStoTo"
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "Null",
                "description": "Null",
                "schema": {
                    "type": [
                        "null"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Source of the default service's implementation of this method.",
                "url": "https://github.com/celestiaorg/celestia-node/blob/main/nodebuilder/p2p/p2p.go#L299"
            }
        },
        {
            "name": "p2p.Connect",
            "description": "Auth level: admin",
            "summary": "Connect ensures there is a connection between this host and the peer with\ngiven peer.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "pi",
                    "description": "peer.AddrInfo",
                    "summary": "",
                    "schema": {
                        "examples": [
                            {
                                "ID": "CovLVG4fQcqUS6DmoMxAwVJGNW6PMzfwTG6BHW9NH9TLGHcbRfvPVc3JVhnufK3HTzStoTo",
                                "Addrs": [
                                    "/ip6/::1/udp/2121/quic-v1"
                                ]
                            }
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "Addrs": {
                                "items": {
                                    "items": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "type": "array"
                            },
                            "ID": {
                                "type": "string"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "Null",
                "description": "Null",
                "schema": {
                    "type": [
                        "null"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Source of the default service's implementation of this method.",
                "url": "https://github.com/celestiaorg/celestia-node/blob/main/nodebuilder/p2p/p2p.go#L295"
            }
        },
        {
            "name": "p2p.Connectedness",
            "description": "Auth level: admin",
            "summary": "Connectedness returns a state signaling connection capabilities.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "id",
                    "description": "peer.ID",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "CovLVG4fQcqUS6DmoMxAwVJGNW6PMzfwTG6BHW9NH9TLGHcbRfvPVc3JVhnufK3HTzStoTo"
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "network.Connectedness",
                "description": "network.Connectedness",
                "summary": "",
                "schema": {
                    "examples": [
                        1
                    ],
                    "type": [
                        "integer"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Source of the default service's implementation of this method.",
                "url": "https://github.com/celestiaorg/celestia-node/blob/main/nodebuilder/p2p/p2p.go#L303"
            }
        },
        {
            "name": "p2p.ConnectionState",
            "description": "Auth level: admin",
            "summary": "ConnectionState returns information about each *active* connection to the peer.\nNOTE: At most cases there should be only a single connection.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "peer",
                    "description": "peer.ID",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "CovLVG4fQcqUS6DmoMxAwVJGNW6PMzfwTG6BHW9NH9TLGHcbRfvPVc3JVhnufK3HTzStoTo"
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "[]ConnectionState",
                "description": "[]ConnectionState",
                "summary": "",
                "schema": {
                    "examples": [
                        [
                            {
                                "Info": {
                                    "StreamMultiplexer": "/celestia/mocha/ipfs/bitswap",
                                    "Security": "/celestia/mocha/ipfs/bitswap",
                                    "Transport": "string value",
                                    "UsedEarlyMuxerNegotiation": true
                                },
                                "NumStreams": 42,
                                "Direction": 0,
                                "Opened": "0001-01-01T00:00:00Z",
                                "Limited": true
                            }
                        ]
                    ],
                    "items": [
                        {
                            "additionalProperties": false,
                            "properties": {
                                "Direction": {
                                    "type": "integer"
                                },
                                "Info": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "Direction": {
                                            "type": "integer"
                                        },
                                        "Info": {},
                                        "Limited": {
                                            "type": "boolean"
                                        },
                                        "NumStreams": {
                                            "type": "integer"
                                        },
                                        "Opened": {
                                            "format": "date-time",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "Limited": {
                                    "type": "boolean"
                                },
                                "NumStreams": {
                                    "type": "integer"
                                },
                                "Opened": {
                                    "format": "date-time",
                                    "type": "string"
                                }
                            },
                            "type": [
                                "object"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Source of the default service's implementation of this method.",
                "url": "https://github.com/celestiaorg/celestia-node/blob/main/nodebuilder/p2p/p2p.go#L363"
            }
        },
        {
            "name": "p2p.Info",
            "description": "Auth level: admin",
            "summary": "Info returns address information about the host.\n",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "peer.AddrInfo",
                "description": "peer.AddrInfo",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "ID": "CovLVG4fQcqUS6DmoMxAwVJGNW6PMzfwTG6BHW9NH9TLGHcbRfvPVc3JVhnufK3HTzStoTo",
                            "Addrs": [
                                "/ip6/::1/udp/2121/quic-v1"
                            ]
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "Addrs": {
                            "items": {
                                "items": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        "ID": {
                            "type": "string"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Source of the default service's implementation of this method.",
                "url": "https://github.com/celestiaorg/celestia-node/blob/main/nodebuilder/p2p/p2p.go#L283"
            }
        },
        {
            "name": "p2p.IsProtected",
            "description": "Auth level: admin",
            "summary": "IsProtected returns whether the given peer is protected.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "id",
                    "description": "peer.ID",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "CovLVG4fQcqUS6DmoMxAwVJGNW6PMzfwTG6BHW9NH9TLGHcbRfvPVc3JVhnufK3HTzStoTo"
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "tag",
                    "description": "string",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "string value"
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "bool",
                "description": "bool",
                "summary": "",
                "schema": {
                    "examples": [
                        true
                    ],
                    "type": [
                        "boolean"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Source of the default service's implementation of this method.",
                "url": "https://github.com/celestiaorg/celestia-node/blob/main/nodebuilder/p2p/p2p.go#L331"
            }
        },
        {
            "name": "p2p.ListBlockedPeers",
            "description": "Auth level: admin",
            "summary": "ListBlockedPeers returns a list of blocked peers.\n",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "[]peer.ID",
                "description": "[]peer.ID",
                "summary": "",
                "schema": {
                    "examples": [
                        [
                            "CovLVG4fQcqUS6DmoMxAwVJGNW6PMzfwTG6BHW9NH9TLGHcbRfvPVc3JVhnufK3HTzStoTo"
                        ]
                    ],
                    "items": [
                        {
                            "type": [
                                "string"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Source of the default service's implementation of this method.",
                "url": "https://github.com/celestiaorg/celestia-node/blob/main/nodebuilder/p2p/p2p.go#L319"
            }
        },
        {
            "name": "p2p.NATStatus",
            "description": "Auth level: admin",
            "summary": "NATStatus returns the current NAT status.\n",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "network.Reachability",
                "description": "network.Reachability",
                "summary": "",
                "schema": {
                    "examples": [
                        2
                    ],
                    "type": [
                        "integer"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Source of the default service's implementation of this method.",
                "url": "https://github.com/celestiaorg/celestia-node/blob/main/nodebuilder/p2p/p2p.go#L307"
            }
        },
        {
            "name": "p2p.PeerInfo",
            "description": "Auth level: admin",
            "summary": "PeerInfo returns a small slice of information Peerstore has on the\ngiven peer.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "id",
                    "description": "peer.ID",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "CovLVG4fQcqUS6DmoMxAwVJGNW6PMzfwTG6BHW9NH9TLGHcbRfvPVc3JVhnufK3HTzStoTo"
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "peer.AddrInfo",
                "description": "peer.AddrInfo",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "ID": "CovLVG4fQcqUS6DmoMxAwVJGNW6PMzfwTG6BHW9NH9TLGHcbRfvPVc3JVhnufK3HTzStoTo",
                            "Addrs": [
                                "/ip6/::1/udp/2121/quic-v1"
                            ]
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "Addrs": {
                            "items": {
                                "items": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        "ID": {
                            "type": "string"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Source of the default service's implementation of this method.",
                "url": "https://github.com/celestiaorg/celestia-node/blob/main/nodebuilder/p2p/p2p.go#L291"
            }
        },
        {
            "name": "p2p.Peers",
            "description": "Auth level: admin",
            "summary": "Peers returns connected peers.\n",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "[]peer.ID",
                "description": "[]peer.ID",
                "summary": "",
                "schema": {
                    "examples": [
                        [
                            "CovLVG4fQcqUS6DmoMxAwVJGNW6PMzfwTG6BHW9NH9TLGHcbRfvPVc3JVhnufK3HTzStoTo"
                        ]
                    ],
                    "items": [
                        {
                            "type": [
                                "string"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Source of the default service's implementation of this method.",
                "url": "https://github.com/celestiaorg/celestia-node/blob/main/nodebuilder/p2p/p2p.go#L287"
            }
        },
        {
            "name": "p2p.Ping",
            "description": "Auth level: admin",
            "summary": "Ping pings the selected peer and returns time it took or error.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "peer",
                    "description": "peer.ID",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "CovLVG4fQcqUS6DmoMxAwVJGNW6PMzfwTG6BHW9NH9TLGHcbRfvPVc3JVhnufK3HTzStoTo"
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "time.Duration",
                "description": "time.Duration",
                "summary": "",
                "schema": {
                    "examples": [
                        1000000000
                    ],
                    "type": [
                        "integer"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Source of the default service's implementation of this method.",
                "url": "https://github.com/celestiaorg/celestia-node/blob/main/nodebuilder/p2p/p2p.go#L359"
            }
        },
        {
            "name": "p2p.Protect",
            "description": "Auth level: admin",
            "summary": "Protect adds a peer to the list of peers who have a bidirectional\npeering agreement that they are protected from being trimmed, dropped\nor negatively scored.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "id",
                    "description": "peer.ID",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "CovLVG4fQcqUS6DmoMxAwVJGNW6PMzfwTG6BHW9NH9TLGHcbRfvPVc3JVhnufK3HTzStoTo"
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "tag",
                    "description": "string",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "string value"
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "Null",
                "description": "Null",
                "schema": {
                    "type": [
                        "null"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Source of the default service's implementation of this method.",
                "url": "https://github.com/celestiaorg/celestia-node/blob/main/nodebuilder/p2p/p2p.go#L323"
            }
        },
        {
            "name": "p2p.PubSubPeers",
            "description": "Auth level: admin",
            "summary": "PubSubPeers returns the peer IDs of the peers joined on\nthe given topic.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "topic",
                    "description": "string",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "string value"
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "[]peer.ID",
                "description": "[]peer.ID",
                "summary": "",
                "schema": {
                    "examples": [
                        [
                            "CovLVG4fQcqUS6DmoMxAwVJGNW6PMzfwTG6BHW9NH9TLGHcbRfvPVc3JVhnufK3HTzStoTo"
                        ]
                    ],
                    "items": [
                        {
                            "type": [
                                "string"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Source of the default service's implementation of this method.",
                "url": "https://github.com/celestiaorg/celestia-node/blob/main/nodebuilder/p2p/p2p.go#L351"
            }
        },
        {
            "name": "p2p.PubSubTopics",
            "description": "Auth level: admin",
            "summary": "PubSubTopics reports current PubSubTopics the node participates in.\n",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "[]string",
                "description": "[]string",
                "summary": "",
                "schema": {
                    "examples": [
                        [
                            "string value"
                        ]
                    ],
                    "items": [
                        {
                            "type": [
                                "string"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Source of the default service's implementation of this method.",
                "url": "https://github.com/celestiaorg/celestia-node/blob/main/nodebuilder/p2p/p2p.go#L355"
            }
        },
        {
            "name": "p2p.ResourceState",
            "description": "Auth level: admin",
            "summary": "ResourceState returns the state of the resource manager.\n",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "rcmgr.ResourceManagerStat",
                "description": "rcmgr.ResourceManagerStat",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "System": {
                                "NumStreamsInbound": 4,
                                "NumStreamsOutbound": 13,
                                "NumConnsInbound": 0,
                                "NumConnsOutbound": 13,
                                "NumFD": 7,
                                "Memory": 4456448
                            },
                            "Transient": {
                                "NumStreamsInbound": 0,
                                "NumStreamsOutbound": 0,
                                "NumConnsInbound": 0,
                                "NumConnsOutbound": 0,
                                "NumFD": 0,
                                "Memory": 0
                            },
                            "Services": {
                                "libp2p.autonat": {
                                    "NumStreamsInbound": 0,
                                    "NumStreamsOutbound": 0,
                                    "NumConnsInbound": 0,
                                    "NumConnsOutbound": 0,
                                    "NumFD": 0,
                                    "Memory": 0
                                },
                                "libp2p.identify": {
                                    "NumStreamsInbound": 0,
                                    "NumStreamsOutbound": 0,
                                    "NumConnsInbound": 0,
                                    "NumConnsOutbound": 0,
                                    "NumFD": 0,
                                    "Memory": 0
                                }
                            },
                            "Protocols": {
                                "/celestia/arabica-3/ipfs/bitswap/1.2.0": {
                                    "NumStreamsInbound": 0,
                                    "NumStreamsOutbound": 4,
                                    "NumConnsInbound": 0,
                                    "NumConnsOutbound": 0,
                                    "NumFD": 0,
                                    "Memory": 0
                                },
                                "/celestia/arabica-3/kad/1.0.0": {
                                    "NumStreamsInbound": 0,
                                    "NumStreamsOutbound": 4,
                                    "NumConnsInbound": 0,
                                    "NumConnsOutbound": 0,
                                    "NumFD": 0,
                                    "Memory": 0
                                },
                                "/floodsub/1.0.0": {
                                    "NumStreamsInbound": 2,
                                    "NumStreamsOutbound": 0,
                                    "NumConnsInbound": 0,
                                    "NumConnsOutbound": 0,
                                    "NumFD": 0,
                                    "Memory": 0
                                },
                                "/ipfs/id/1.0.0": {
                                    "NumStreamsInbound": 0,
                                    "NumStreamsOutbound": 1,
                                    "NumConnsInbound": 0,
                                    "NumConnsOutbound": 0,
                                    "NumFD": 0,
                                    "Memory": 0
                                },
                                "/meshsub/1.1.0": {
                                    "NumStreamsInbound": 2,
                                    "NumStreamsOutbound": 4,
                                    "NumConnsInbound": 0,
                                    "NumConnsOutbound": 0,
                                    "NumFD": 0,
                                    "Memory": 0
                                }
                            },
                            "Peers": {
                                "\u0000$\b\u0001\u0012 \ufffd-\ufffd\ufffd\u0026\ufffd\ufffdY\ufffdk\ufffd\u000e\u0011\ufffdS\ufffdRM\u0013\ufffd\u0015\ufffd\ufffd$\ufffd\ufffd\ufffd\ufffd*\ufffd\u0002W": {
                                    "NumStreamsInbound": 1,
                                    "NumStreamsOutbound": 3,
                                    "NumConnsInbound": 0,
                                    "NumConnsOutbound": 3,
                                    "NumFD": 3,
                                    "Memory": 1048576
                                }
                            }
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "Peers": {
                            "patternProperties": {
                                ".*": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "Memory": {
                                            "type": "integer"
                                        },
                                        "NumConnsInbound": {
                                            "type": "integer"
                                        },
                                        "NumConnsOutbound": {
                                            "type": "integer"
                                        },
                                        "NumFD": {
                                            "type": "integer"
                                        },
                                        "NumStreamsInbound": {
                                            "type": "integer"
                                        },
                                        "NumStreamsOutbound": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "Protocols": {
                            "patternProperties": {
                                ".*": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "Memory": {
                                            "type": "integer"
                                        },
                                        "NumConnsInbound": {
                                            "type": "integer"
                                        },
                                        "NumConnsOutbound": {
                                            "type": "integer"
                                        },
                                        "NumFD": {
                                            "type": "integer"
                                        },
                                        "NumStreamsInbound": {
                                            "type": "integer"
                                        },
                                        "NumStreamsOutbound": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "Services": {
                            "patternProperties": {
                                ".*": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "Memory": {
                                            "type": "integer"
                                        },
                                        "NumConnsInbound": {
                                            "type": "integer"
                                        },
                                        "NumConnsOutbound": {
                                            "type": "integer"
                                        },
                                        "NumFD": {
                                            "type": "integer"
                                        },
                                        "NumStreamsInbound": {
                                            "type": "integer"
                                        },
                                        "NumStreamsOutbound": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "System": {
                            "additionalProperties": false,
                            "properties": {
                                "Memory": {
                                    "type": "integer"
                                },
                                "NumConnsInbound": {
                                    "type": "integer"
                                },
                                "NumConnsOutbound": {
                                    "type": "integer"
                                },
                                "NumFD": {
                                    "type": "integer"
                                },
                                "NumStreamsInbound": {
                                    "type": "integer"
                                },
                                "NumStreamsOutbound": {
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        },
                        "Transient": {
                            "additionalProperties": false,
                            "properties": {
                                "Memory": {
                                    "type": "integer"
                                },
                                "NumConnsInbound": {
                                    "type": "integer"
                                },
                                "NumConnsOutbound": {
                                    "type": "integer"
                                },
                                "NumFD": {
                                    "type": "integer"
                                },
                                "NumStreamsInbound": {
                                    "type": "integer"
                                },
                                "NumStreamsOutbound": {
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Source of the default service's implementation of this method.",
                "url": "https://github.com/celestiaorg/celestia-node/blob/main/nodebuilder/p2p/p2p.go#L347"
            }
        },
        {
            "name": "p2p.UnblockPeer",
            "description": "Auth level: admin",
            "summary": "UnblockPeer removes a peer from the set of blocked peers.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p",
                    "description": "peer.ID",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "CovLVG4fQcqUS6DmoMxAwVJGNW6PMzfwTG6BHW9NH9TLGHcbRfvPVc3JVhnufK3HTzStoTo"
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "Null",
                "description": "Null",
                "schema": {
                    "type": [
                        "null"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Source of the default service's implementation of this method.",
                "url": "https://github.com/celestiaorg/celestia-node/blob/main/nodebuilder/p2p/p2p.go#L315"
            }
        },
        {
            "name": "p2p.Unprotect",
            "description": "Auth level: admin",
            "summary": "Unprotect removes a peer from the list of peers who have a bidirectional\npeering agreement that they are protected from being trimmed, dropped\nor negatively scored, returning a bool representing whether the given\npeer is protected or not.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "id",
                    "description": "peer.ID",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "CovLVG4fQcqUS6DmoMxAwVJGNW6PMzfwTG6BHW9NH9TLGHcbRfvPVc3JVhnufK3HTzStoTo"
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "tag",
                    "description": "string",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "string value"
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "bool",
                "description": "bool",
                "summary": "",
                "schema": {
                    "examples": [
                        true
                    ],
                    "type": [
                        "boolean"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Source of the default service's implementation of this method.",
                "url": "https://github.com/celestiaorg/celestia-node/blob/main/nodebuilder/p2p/p2p.go#L327"
            }
        },
        {
            "name": "share.GetEDS",
            "description": "Auth level: read",
            "summary": "GetEDS gets the full EDS identified by the given extended header.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "height",
                    "description": "uint64",
                    "summary": "",
                    "schema": {
                        "examples": [
                            42
                        ],
                        "type": [
                            "integer"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*rsmt2d.ExtendedDataSquare",
                "description": "*rsmt2d.ExtendedDataSquare",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "data_square": [




                            ],
                            "codec": "Leopard"
                        }
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Source of the default service's implementation of this method.",
                "url": "https://github.com/celestiaorg/celestia-node/blob/main/nodebuilder/share/share.go#L114"
            }
        },
        {
            "name": "share.GetNamespaceData",
            "description": "Auth level: read",
            "summary": "GetNamespaceData gets all shares from an EDS within the given namespace.\nShares are returned in a row-by-row order if the namespace spans multiple rows.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "height",
                    "description": "uint64",
                    "summary": "",
                    "schema": {
                        "examples": [
                            42
                        ],
                        "type": [
                            "integer"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "namespace",
                    "description": "libshare.Namespace",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAMJ/xGlNMdE="
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "shwap.NamespaceData",
                "description": "shwap.NamespaceData",
                "summary": "",
                "schema": {
                    "examples": [
                        [
                            {
                                "shares": [
                                    null
                                ],
                                "proof": {}
                            }
                        ]
                    ],
                    "items": [
                        {
                            "additionalProperties": false,
                            "properties": {
                                "proof": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "shares": {
                                    "items": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": [
                                "object"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Source of the default service's implementation of this method.",
                "url": "https://github.com/celestiaorg/celestia-node/blob/main/nodebuilder/share/share.go#L126"
            }
        },
        {
            "name": "share.GetRange",
            "description": "Auth level: read",
            "summary": "GetRange gets a list of shares and their corresponding proof.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "height",
                    "description": "uint64",
                    "summary": "",
                    "schema": {
                        "examples": [
                            42
                        ],
                        "type": [
                            "integer"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "start",
                    "description": "int",
                    "summary": "",
                    "schema": {
                        "examples": [
                            42
                        ],
                        "type": [
                            "integer"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "end",
                    "description": "int",
                    "summary": "",
                    "schema": {
                        "examples": [
                            42
                        ],
                        "type": [
                            "integer"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*GetRangeResult",
                "description": "*GetRangeResult",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Shares": [
                                null
                            ],
                            "Proof": {
                                "data": [
                                    "Ynl0ZSBhcnJheQ=="
                                ],
                                "share_proofs": [
                                    {
                                        "start": 42,
                                        "end": 42,
                                        "nodes": [
                                            "Ynl0ZSBhcnJheQ=="
                                        ],
                                        "leaf_hash": "Ynl0ZSBhcnJheQ=="
                                    }
                                ],
                                "namespace_id": "Ynl0ZSBhcnJheQ==",
                                "row_proof": {
                                    "row_roots": [
                                        "07"
                                    ],
                                    "proofs": [
                                        {
                                            "total": 42,
                                            "index": 42,
                                            "leaf_hash": "Ynl0ZSBhcnJheQ==",
                                            "aunts": [
                                                "Ynl0ZSBhcnJheQ=="
                                            ]
                                        }
                                    ],
                                    "start_row": 42,
                                    "end_row": 42
                                },
                                "namespace_version": 42
                            }
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "Proof": {
                            "additionalProperties": false,
                            "properties": {
                                "data": {
                                    "items": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "namespace_id": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "namespace_version": {
                                    "type": "integer"
                                },
                                "row_proof": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "end_row": {
                                            "type": "integer"
                                        },
                                        "proofs": {
                                            "items": {
                                                "additionalProperties": false,
                                                "properties": {
                                                    "aunts": {
                                                        "items": {
                                                            "media": {
                                                                "binaryEncoding": "base64"
                                                            },
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "index": {
                                                        "type": "integer"
                                                    },
                                                    "leaf_hash": {
                                                        "media": {
                                                            "binaryEncoding": "base64"
                                                        },
                                                        "type": "string"
                                                    },
                                                    "total": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "row_roots": {
                                            "items": {
                                                "media": {
                                                    "binaryEncoding": "base64"
                                                },
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "start_row": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                },
                                "share_proofs": {
                                    "items": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "end": {
                                                "type": "integer"
                                            },
                                            "leaf_hash": {
                                                "media": {
                                                    "binaryEncoding": "base64"
                                                },
                                                "type": "string"
                                            },
                                            "nodes": {
                                                "items": {
                                                    "media": {
                                                        "binaryEncoding": "base64"
                                                    },
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "start": {
                                                "type": "integer"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "Shares": {
                            "items": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "type": "array"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Source of the default service's implementation of this method.",
                "url": "https://github.com/celestiaorg/celestia-node/blob/main/nodebuilder/share/share.go#L122"
            }
        },
        {
            "name": "share.GetRow",
            "description": "Auth level: read",
            "summary": "GetRow gets all shares from specified row.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "height",
                    "description": "uint64",
                    "summary": "",
                    "schema": {
                        "examples": [
                            42
                        ],
                        "type": [
                            "integer"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "rowIdx",
                    "description": "int",
                    "summary": "",
                    "schema": {
                        "examples": [
                            42
                        ],
                        "type": [
                            "integer"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "shwap.Row",
                "description": "shwap.Row",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "shares": null,
                            "side": "LEFT"
                        }
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Source of the default service's implementation of this method.",
                "url": "https://github.com/celestiaorg/celestia-node/blob/main/nodebuilder/share/share.go#L118"
            }
        },
        {
            "name": "share.GetSamples",
            "description": "Auth level: read",
            "summary": "GetSamples gets sample for given indices.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "header",
                    "description": "*header.ExtendedHeader",
                    "summary": "",
                    "schema": {
                        "examples": [
                            {
                                "header": {
                                    "version": {
                                        "block": "11"
                                    },
                                    "chain_id": "arabica-6",
                                    "height": "67374",
                                    "time": "2023-02-25T12:10:28.067566292Z",
                                    "last_block_id": {
                                        "hash": "47A2C7758760988500B2F043D3903BBBF1C8B383CA33CF7056AA45E22055663E",
                                        "parts": {
                                            "total": 1,
                                            "hash": "33B012F244E27672169DD3D62CDBC92DA9486E410A5530F41FE6A890D8E2EE42"
                                        }
                                    },
                                    "last_commit_hash": "888D47F5E9473501C99F2B6136B6B9FFBC9D1CD2F54002BCD5DF002FFEF0A83D",
                                    "data_hash": "257760461993F8F197B421EC7435F3C36C3734923E3DA9A42DC73B05F07B3D08",
                                    "validators_hash": "883A0C92B8D976312B249C1397E73CF2981A9EB715717CBEE3800B8380C22C1D",
                                    "next_validators_hash": "883A0C92B8D976312B249C1397E73CF2981A9EB715717CBEE3800B8380C22C1D",
                                    "consensus_hash": "048091BC7DDC283F77BFBF91D73C44DA58C3DF8A9CBC867405D8B7F3DAADA22F",
                                    "app_hash": "1FC70854A185737C7FD720FCCE9167876EE4B9ABE23DB1EBB8C552D3E3978435",
                                    "last_results_hash": "E3B0C44298FC1C149AFBF4C8996FB92427AE41E4649B934CA495991B7852B855",
                                    "evidence_hash": "E3B0C44298FC1C149AFBF4C8996FB92427AE41E4649B934CA495991B7852B855",
                                    "proposer_address": "57DC09D28388DBF977CFC30EF50BE8B644CCC1FA"
                                },
                                "validator_set": {
                                    "validators": [
                                        {
                                            "address": "57DC09D28388DBF977CFC30EF50BE8B644CCC1FA",
                                            "pub_key": {
                                                "type": "tendermint/PubKeyEd25519",
                                                "value": "aoB4xU9//HAqOP9ciyp0+PTdZxt/UGKgZOabU6JxW8o="
                                            },
                                            "voting_power": "5000000000",
                                            "proposer_priority": "0"
                                        }
                                    ],
                                    "proposer": {
                                        "address": "57DC09D28388DBF977CFC30EF50BE8B644CCC1FA",
                                        "pub_key": {
                                            "type": "tendermint/PubKeyEd25519",
                                            "value": "aoB4xU9//HAqOP9ciyp0+PTdZxt/UGKgZOabU6JxW8o="
                                        },
                                        "voting_power": "5000000000",
                                        "proposer_priority": "0"
                                    }
                                },
                                "commit": {
                                    "height": 67374,
                                    "round": 0,
                                    "block_id": {
                                        "hash": "A7F6B1CF33313121539206754A73FDC22ADA48C4AA8C4BB4F707ED2E089E59D3",
                                        "parts": {
                                            "total": 1,
                                            "hash": "6634FE1E1DDDCB9914ACE81F146013986F5FDA03A8F1C16DC5ECA0D9B0E08FBC"
                                        }
                                    },
                                    "signatures": [
                                        {
                                            "block_id_flag": 2,
                                            "validator_address": "57DC09D28388DBF977CFC30EF50BE8B644CCC1FA",
                                            "timestamp": "2023-02-25T12:10:38.130121476Z",
                                            "signature": "HyR/uRIUNc5GNqQteZyrVjJM47SI9sRAgrLsNqJDls3AzbvHUfN4zzWyw0afyEvNm98Bm2GIoJoZC5D8oQvdBA=="
                                        }
                                    ]
                                },
                                "dah": {
                                    "row_roots": [
                                        "//////////7//////////ql+/VFmJ8PWE9BcjrTDLrY/hzVeGdzFCpfEhiXDXZmt",
                                        "/////////////////////zHeGnUtPJn8QyPpePSYl4qRVrcUvG2fwptyoA85Myik"
                                    ],
                                    "column_roots": [
                                        "//////////7//////////ql+/VFmJ8PWE9BcjrTDLrY/hzVeGdzFCpfEhiXDXZmt",
                                        "/////////////////////zHeGnUtPJn8QyPpePSYl4qRVrcUvG2fwptyoA85Myik"
                                    ]
                                }
                            }
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "commit": {
                                "additionalProperties": false,
                                "properties": {
                                    "block_id": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "hash": {
                                                "media": {
                                                    "binaryEncoding": "base64"
                                                },
                                                "type": "string"
                                            },
                                            "parts": {
                                                "additionalProperties": false,
                                                "properties": {
                                                    "hash": {
                                                        "media": {
                                                            "binaryEncoding": "base64"
                                                        },
                                                        "type": "string"
                                                    },
                                                    "total": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "height": {
                                        "type": "integer"
                                    },
                                    "round": {
                                        "type": "integer"
                                    },
                                    "signatures": {
                                        "items": {
                                            "additionalProperties": false,
                                            "properties": {
                                                "block_id_flag": {
                                                    "type": "integer"
                                                },
                                                "signature": {
                                                    "media": {
                                                        "binaryEncoding": "base64"
                                                    },
                                                    "type": "string"
                                                },
                                                "timestamp": {
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "validator_address": {
                                                    "media": {
                                                        "binaryEncoding": "base64"
                                                    },
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            },
                            "dah": {
                                "additionalProperties": false,
                                "properties": {
                                    "column_roots": {
                                        "items": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "row_roots": {
                                        "items": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            },
                            "header": {
                                "additionalProperties": false,
                                "properties": {
                                    "app_hash": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    },
                                    "chain_id": {
                                        "type": "string"
                                    },
                                    "consensus_hash": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    },
                                    "data_hash": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    },
                                    "evidence_hash": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    },
                                    "height": {
                                        "type": "integer"
                                    },
                                    "last_block_id": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "hash": {
                                                "media": {
                                                    "binaryEncoding": "base64"
                                                },
                                                "type": "string"
                                            },
                                            "parts": {
                                                "additionalProperties": false,
                                                "properties": {
                                                    "hash": {
                                                        "media": {
                                                            "binaryEncoding": "base64"
                                                        },
                                                        "type": "string"
                                                    },
                                                    "total": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "last_commit_hash": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    },
                                    "last_results_hash": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    },
                                    "next_validators_hash": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    },
                                    "proposer_address": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    },
                                    "time": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "validators_hash": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    },
                                    "version": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "app": {
                                                "type": "integer"
                                            },
                                            "block": {
                                                "type": "integer"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            },
                            "validator_set": {
                                "additionalProperties": false,
                                "properties": {
                                    "proposer": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "address": {
                                                "media": {
                                                    "binaryEncoding": "base64"
                                                },
                                                "type": "string"
                                            },
                                            "proposer_priority": {
                                                "type": "integer"
                                            },
                                            "pub_key": {
                                                "additionalProperties": true
                                            },
                                            "voting_power": {
                                                "type": "integer"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "validators": {
                                        "items": {
                                            "additionalProperties": false,
                                            "properties": {
                                                "address": {
                                                    "media": {
                                                        "binaryEncoding": "base64"
                                                    },
                                                    "type": "string"
                                                },
                                                "proposer_priority": {
                                                    "type": "integer"
                                                },
                                                "pub_key": {
                                                    "additionalProperties": true
                                                },
                                                "voting_power": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "indices",
                    "description": "[]shwap.SampleCoords",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "row": 42,
                                    "col": 42
                                }
                            ]
                        ],
                        "items": [
                            {
                                "additionalProperties": false,
                                "properties": {
                                    "col": {
                                        "type": "integer"
                                    },
                                    "row": {
                                        "type": "integer"
                                    }
                                },
                                "type": [
                                    "object"
                                ]
                            }
                        ],
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "[]shwap.Sample",
                "description": "[]shwap.Sample",
                "summary": "",
                "schema": {
                    "examples": [
                        [
                            {
                                "share": {},
                                "proof": {}
                            }
                        ]
                    ],
                    "items": [
                        {
                            "additionalProperties": false,
                            "properties": {
                                "Proof": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "ProofType": {
                                    "type": "integer"
                                }
                            },
                            "type": [
                                "object"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Source of the default service's implementation of this method.",
                "url": "https://github.com/celestiaorg/celestia-node/blob/main/nodebuilder/share/share.go#L108"
            }
        },
        {
            "name": "share.GetShare",
            "description": "Auth level: read",
            "summary": "GetShare gets a Share by coordinates in EDS.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "height",
                    "description": "uint64",
                    "summary": "",
                    "schema": {
                        "examples": [
                            42
                        ],
                        "type": [
                            "integer"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "row",
                    "description": "int",
                    "summary": "",
                    "schema": {
                        "examples": [
                            42
                        ],
                        "type": [
                            "integer"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "col",
                    "description": "int",
                    "summary": "",
                    "schema": {
                        "examples": [
                            42
                        ],
                        "type": [
                            "integer"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "libshare.Share",
                "description": "libshare.Share",
                "summary": "",
                "schema": {
                    "examples": [
                        null
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Source of the default service's implementation of this method.",
                "url": "https://github.com/celestiaorg/celestia-node/blob/main/nodebuilder/share/share.go#L104"
            }
        },
        {
            "name": "share.SharesAvailable",
            "description": "Auth level: read",
            "summary": "SharesAvailable subjectively validates if Shares committed to the given\nExtendedHeader are available on the Network.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "height",
                    "description": "uint64",
                    "summary": "",
                    "schema": {
                        "examples": [
                            42
                        ],
                        "type": [
                            "integer"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "Null",
                "description": "Null",
                "schema": {
                    "type": [
                        "null"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Source of the default service's implementation of this method.",
                "url": "https://github.com/celestiaorg/celestia-node/blob/main/nodebuilder/share/share.go#L100"
            }
        },
        {
            "name": "state.AccountAddress",
            "description": "Auth level: read",
            "summary": "AccountAddress retrieves the address of the node's account/signer\n",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "state.Address",
                "description": "state.Address",
                "summary": "",
                "schema": {
                    "examples": [
                        "celestia1377k5an3f94v6wyaceu0cf4nq6gk2jtpc46g7h"
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Source of the default service's implementation of this method.",
                "url": "https://github.com/celestiaorg/celestia-node/blob/main/nodebuilder/state/state.go#L172"
            }
        },
        {
            "name": "state.Balance",
            "description": "Auth level: read",
            "summary": "Balance retrieves the Celestia coin balance for the node's account/signer\nand verifies it against the corresponding block's AppHash.\n",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "*state.Balance",
                "description": "*state.Balance",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "denom": "string value",
                            "amount": "42"
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "amount": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "denom": {
                            "type": "string"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Source of the default service's implementation of this method.",
                "url": "https://github.com/celestiaorg/celestia-node/blob/main/nodebuilder/state/state.go#L251"
            }
        },
        {
            "name": "state.BalanceForAddress",
            "description": "Auth level: read",
            "summary": "BalanceForAddress retrieves the Celestia coin balance for the given address and verifies\nthe returned balance against the corresponding block's AppHash.\n\nNOTE: the balance returned is the balance reported by the block right before\nthe node's current head (head-1). This is due to the fact that for block N, the block's\n`AppHash` is the result of applying the previous block's transaction list.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "addr",
                    "description": "state.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "celestia1377k5an3f94v6wyaceu0cf4nq6gk2jtpc46g7h"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*state.Balance",
                "description": "*state.Balance",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "denom": "string value",
                            "amount": "42"
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "amount": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "denom": {
                            "type": "string"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Source of the default service's implementation of this method.",
                "url": "https://github.com/celestiaorg/celestia-node/blob/main/nodebuilder/state/state.go#L176"
            }
        },
        {
            "name": "state.BeginRedelegate",
            "description": "Auth level: write",
            "summary": "BeginRedelegate sends a user's delegated tokens to a new validator for redelegation.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "srcValAddr",
                    "description": "state.ValAddress",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "celestiavaloper1q3v5cugc8cdpud87u4zwy0a74uxkk6u4q4gx4p"
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "dstValAddr",
                    "description": "state.ValAddress",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "celestiavaloper1q3v5cugc8cdpud87u4zwy0a74uxkk6u4q4gx4p"
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "amount",
                    "description": "state.Int",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "42"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "config",
                    "description": "*state.TxConfig",
                    "summary": "",
                    "schema": {
                        "examples": [
                            {
                                "gas_price": 0.002,
                                "is_gas_price_set": true,
                                "max_gas_price": 0.2,
                                "gas": 142225,
                                "tx_priority": 1,
                                "key_name": "my_celes_key",
                                "signer_address": "celestia1pjcmwj8w6hyr2c4wehakc5g8cfs36aysgucx66",
                                "fee_granter_address": "celestia1hakc56ax66ypjcmwj8w6hyr2c4g8cfs3wesguc"
                            }
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*state.TxResponse",
                "description": "*state.TxResponse",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "height": 30497,
                            "txhash": "05D9016060072AA71B007A6CFB1B895623192D6616D513017964C3BFCD047282",
                            "logs": null,
                            "events": null
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "code": {
                            "type": "integer"
                        },
                        "codespace": {
                            "type": "string"
                        },
                        "data": {
                            "type": "string"
                        },
                        "events": {
                            "items": {
                                "additionalProperties": false,
                                "properties": {
                                    "attributes": {
                                        "items": {
                                            "additionalProperties": false,
                                            "properties": {
                                                "index": {
                                                    "type": "boolean"
                                                },
                                                "key": {
                                                    "media": {
                                                        "binaryEncoding": "base64"
                                                    },
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "media": {
                                                        "binaryEncoding": "base64"
                                                    },
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "type": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "gas_used": {
                            "type": "integer"
                        },
                        "gas_wanted": {
                            "type": "integer"
                        },
                        "height": {
                            "type": "integer"
                        },
                        "info": {
                            "type": "string"
                        },
                        "logs": {
                            "items": {
                                "additionalProperties": false,
                                "properties": {
                                    "events": {
                                        "items": {
                                            "additionalProperties": false,
                                            "properties": {
                                                "attributes": {
                                                    "items": {
                                                        "additionalProperties": false,
                                                        "properties": {
                                                            "key": {
                                                                "type": "string"
                                                            },
                                                            "value": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "type": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "log": {
                                        "type": "string"
                                    },
                                    "msg_index": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "raw_log": {
                            "type": "string"
                        },
                        "timestamp": {
                            "type": "string"
                        },
                        "tx": {
                            "additionalProperties": false,
                            "properties": {
                                "type_url": {
                                    "type": "string"
                                },
                                "value": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "txhash": {
                            "type": "string"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Source of the default service's implementation of this method.",
                "url": "https://github.com/celestiaorg/celestia-node/blob/main/nodebuilder/state/state.go#L206"
            }
        },
        {
            "name": "state.CancelUnbondingDelegation",
            "description": "Auth level: write",
            "summary": "CancelUnbondingDelegation cancels a user's pending undelegation from a validator.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "valAddr",
                    "description": "state.ValAddress",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "celestiavaloper1q3v5cugc8cdpud87u4zwy0a74uxkk6u4q4gx4p"
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "amount",
                    "description": "state.Int",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "42"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "height",
                    "description": "state.Int",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "42"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "config",
                    "description": "*state.TxConfig",
                    "summary": "",
                    "schema": {
                        "examples": [
                            {
                                "gas_price": 0.002,
                                "is_gas_price_set": true,
                                "max_gas_price": 0.2,
                                "gas": 142225,
                                "tx_priority": 1,
                                "key_name": "my_celes_key",
                                "signer_address": "celestia1pjcmwj8w6hyr2c4wehakc5g8cfs36aysgucx66",
                                "fee_granter_address": "celestia1hakc56ax66ypjcmwj8w6hyr2c4g8cfs3wesguc"
                            }
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*state.TxResponse",
                "description": "*state.TxResponse",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "height": 30497,
                            "txhash": "05D9016060072AA71B007A6CFB1B895623192D6616D513017964C3BFCD047282",
                            "logs": null,
                            "events": null
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "code": {
                            "type": "integer"
                        },
                        "codespace": {
                            "type": "string"
                        },
                        "data": {
                            "type": "string"
                        },
                        "events": {
                            "items": {
                                "additionalProperties": false,
                                "properties": {
                                    "attributes": {
                                        "items": {
                                            "additionalProperties": false,
                                            "properties": {
                                                "index": {
                                                    "type": "boolean"
                                                },
                                                "key": {
                                                    "media": {
                                                        "binaryEncoding": "base64"
                                                    },
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "media": {
                                                        "binaryEncoding": "base64"
                                                    },
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "type": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "gas_used": {
                            "type": "integer"
                        },
                        "gas_wanted": {
                            "type": "integer"
                        },
                        "height": {
                            "type": "integer"
                        },
                        "info": {
                            "type": "string"
                        },
                        "logs": {
                            "items": {
                                "additionalProperties": false,
                                "properties": {
                                    "events": {
                                        "items": {
                                            "additionalProperties": false,
                                            "properties": {
                                                "attributes": {
                                                    "items": {
                                                        "additionalProperties": false,
                                                        "properties": {
                                                            "key": {
                                                                "type": "string"
                                                            },
                                                            "value": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "type": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "log": {
                                        "type": "string"
                                    },
                                    "msg_index": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "raw_log": {
                            "type": "string"
                        },
                        "timestamp": {
                            "type": "string"
                        },
                        "tx": {
                            "additionalProperties": false,
                            "properties": {
                                "type_url": {
                                    "type": "string"
                                },
                                "value": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "txhash": {
                            "type": "string"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Source of the default service's implementation of this method.",
                "url": "https://github.com/celestiaorg/celestia-node/blob/main/nodebuilder/state/state.go#L197"
            }
        },
        {
            "name": "state.Delegate",
            "description": "Auth level: write",
            "summary": "Delegate sends a user's liquid tokens to a validator for delegation.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "delAddr",
                    "description": "state.ValAddress",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "celestiavaloper1q3v5cugc8cdpud87u4zwy0a74uxkk6u4q4gx4p"
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "amount",
                    "description": "state.Int",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "42"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "config",
                    "description": "*state.TxConfig",
                    "summary": "",
                    "schema": {
                        "examples": [
                            {
                                "gas_price": 0.002,
                                "is_gas_price_set": true,
                                "max_gas_price": 0.2,
                                "gas": 142225,
                                "tx_priority": 1,
                                "key_name": "my_celes_key",
                                "signer_address": "celestia1pjcmwj8w6hyr2c4wehakc5g8cfs36aysgucx66",
                                "fee_granter_address": "celestia1hakc56ax66ypjcmwj8w6hyr2c4g8cfs3wesguc"
                            }
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*state.TxResponse",
                "description": "*state.TxResponse",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "height": 30497,
                            "txhash": "05D9016060072AA71B007A6CFB1B895623192D6616D513017964C3BFCD047282",
                            "logs": null,
                            "events": null
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "code": {
                            "type": "integer"
                        },
                        "codespace": {
                            "type": "string"
                        },
                        "data": {
                            "type": "string"
                        },
                        "events": {
                            "items": {
                                "additionalProperties": false,
                                "properties": {
                                    "attributes": {
                                        "items": {
                                            "additionalProperties": false,
                                            "properties": {
                                                "index": {
                                                    "type": "boolean"
                                                },
                                                "key": {
                                                    "media": {
                                                        "binaryEncoding": "base64"
                                                    },
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "media": {
                                                        "binaryEncoding": "base64"
                                                    },
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "type": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "gas_used": {
                            "type": "integer"
                        },
                        "gas_wanted": {
                            "type": "integer"
                        },
                        "height": {
                            "type": "integer"
                        },
                        "info": {
                            "type": "string"
                        },
                        "logs": {
                            "items": {
                                "additionalProperties": false,
                                "properties": {
                                    "events": {
                                        "items": {
                                            "additionalProperties": false,
                                            "properties": {
                                                "attributes": {
                                                    "items": {
                                                        "additionalProperties": false,
                                                        "properties": {
                                                            "key": {
                                                                "type": "string"
                                                            },
                                                            "value": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "type": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "log": {
                                        "type": "string"
                                    },
                                    "msg_index": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "raw_log": {
                            "type": "string"
                        },
                        "timestamp": {
                            "type": "string"
                        },
                        "tx": {
                            "additionalProperties": false,
                            "properties": {
                                "type_url": {
                                    "type": "string"
                                },
                                "value": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "txhash": {
                            "type": "string"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Source of the default service's implementation of this method.",
                "url": "https://github.com/celestiaorg/celestia-node/blob/main/nodebuilder/state/state.go#L224"
            }
        },
        {
            "name": "state.GrantFee",
            "description": "Auth level: write",
            "summary": "No comment exists yet for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "grantee",
                    "description": "state.AccAddress",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "celestia1377k5an3f94v6wyaceu0cf4nq6gk2jtpc46g7h"
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "amount",
                    "description": "state.Int",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "42"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "config",
                    "description": "*state.TxConfig",
                    "summary": "",
                    "schema": {
                        "examples": [
                            {
                                "gas_price": 0.002,
                                "is_gas_price_set": true,
                                "max_gas_price": 0.2,
                                "gas": 142225,
                                "tx_priority": 1,
                                "key_name": "my_celes_key",
                                "signer_address": "celestia1pjcmwj8w6hyr2c4wehakc5g8cfs36aysgucx66",
                                "fee_granter_address": "celestia1hakc56ax66ypjcmwj8w6hyr2c4g8cfs3wesguc"
                            }
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*state.TxResponse",
                "description": "*state.TxResponse",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "height": 30497,
                            "txhash": "05D9016060072AA71B007A6CFB1B895623192D6616D513017964C3BFCD047282",
                            "logs": null,
                            "events": null
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "code": {
                            "type": "integer"
                        },
                        "codespace": {
                            "type": "string"
                        },
                        "data": {
                            "type": "string"
                        },
                        "events": {
                            "items": {
                                "additionalProperties": false,
                                "properties": {
                                    "attributes": {
                                        "items": {
                                            "additionalProperties": false,
                                            "properties": {
                                                "index": {
                                                    "type": "boolean"
                                                },
                                                "key": {
                                                    "media": {
                                                        "binaryEncoding": "base64"
                                                    },
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "media": {
                                                        "binaryEncoding": "base64"
                                                    },
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "type": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "gas_used": {
                            "type": "integer"
                        },
                        "gas_wanted": {
                            "type": "integer"
                        },
                        "height": {
                            "type": "integer"
                        },
                        "info": {
                            "type": "string"
                        },
                        "logs": {
                            "items": {
                                "additionalProperties": false,
                                "properties": {
                                    "events": {
                                        "items": {
                                            "additionalProperties": false,
                                            "properties": {
                                                "attributes": {
                                                    "items": {
                                                        "additionalProperties": false,
                                                        "properties": {
                                                            "key": {
                                                                "type": "string"
                                                            },
                                                            "value": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "type": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "log": {
                                        "type": "string"
                                    },
                                    "msg_index": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "raw_log": {
                            "type": "string"
                        },
                        "timestamp": {
                            "type": "string"
                        },
                        "tx": {
                            "additionalProperties": false,
                            "properties": {
                                "type_url": {
                                    "type": "string"
                                },
                                "value": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "txhash": {
                            "type": "string"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Source of the default service's implementation of this method.",
                "url": "https://github.com/celestiaorg/celestia-node/blob/main/nodebuilder/state/state.go#L255"
            }
        },
        {
            "name": "state.QueryDelegation",
            "description": "Auth level: read",
            "summary": "QueryDelegation retrieves the delegation information between a delegator and a validator.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "valAddr",
                    "description": "state.ValAddress",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "celestiavaloper1q3v5cugc8cdpud87u4zwy0a74uxkk6u4q4gx4p"
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*types.QueryDelegationResponse",
                "description": "*types.QueryDelegationResponse",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "delegation_response": {
                                "delegation": {
                                    "delegator_address": "string value",
                                    "validator_address": "string value",
                                    "shares": "0"
                                },
                                "balance": {
                                    "denom": "utia",
                                    "amount": "42"
                                }
                            }
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "delegation_response": {
                            "additionalProperties": false,
                            "properties": {
                                "balance": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "amount": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "denom": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "delegation": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "delegator_address": {
                                            "type": "string"
                                        },
                                        "shares": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "validator_address": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Source of the default service's implementation of this method.",
                "url": "https://github.com/celestiaorg/celestia-node/blob/main/nodebuilder/state/state.go#L233"
            }
        },
        {
            "name": "state.QueryRedelegations",
            "description": "Auth level: read",
            "summary": "QueryRedelegations retrieves the status of the redelegations between a delegator and a validator.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "srcValAddr",
                    "description": "state.ValAddress",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "celestiavaloper1q3v5cugc8cdpud87u4zwy0a74uxkk6u4q4gx4p"
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "dstValAddr",
                    "description": "state.ValAddress",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "celestiavaloper1q3v5cugc8cdpud87u4zwy0a74uxkk6u4q4gx4p"
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*types.QueryRedelegationsResponse",
                "description": "*types.QueryRedelegationsResponse",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "redelegation_responses": [
                                {
                                    "redelegation": {
                                        "delegator_address": "string value",
                                        "validator_src_address": "string value",
                                        "validator_dst_address": "string value",
                                        "entries": [
                                            {
                                                "creation_height": 42,
                                                "completion_time": "0001-01-01T00:00:00Z",
                                                "initial_balance": "42",
                                                "shares_dst": "0"
                                            }
                                        ]
                                    },
                                    "entries": [
                                        {
                                            "redelegation_entry": {
                                                "creation_height": 42,
                                                "completion_time": "0001-01-01T00:00:00Z",
                                                "initial_balance": "42",
                                                "shares_dst": "0"
                                            },
                                            "balance": "42"
                                        }
                                    ]
                                }
                            ],
                            "pagination": {
                                "next_key": "Ynl0ZSBhcnJheQ==",
                                "total": 42
                            }
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "pagination": {
                            "additionalProperties": false,
                            "properties": {
                                "next_key": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "total": {
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        },
                        "redelegation_responses": {
                            "items": {
                                "additionalProperties": false,
                                "properties": {
                                    "entries": {
                                        "items": {
                                            "additionalProperties": false,
                                            "properties": {
                                                "balance": {
                                                    "additionalProperties": false,
                                                    "type": "object"
                                                },
                                                "redelegation_entry": {
                                                    "additionalProperties": false,
                                                    "properties": {
                                                        "completion_time": {
                                                            "format": "date-time",
                                                            "type": "string"
                                                        },
                                                        "creation_height": {
                                                            "type": "integer"
                                                        },
                                                        "initial_balance": {
                                                            "additionalProperties": false,
                                                            "type": "object"
                                                        },
                                                        "shares_dst": {
                                                            "additionalProperties": false,
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "redelegation": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "delegator_address": {
                                                "type": "string"
                                            },
                                            "entries": {
                                                "items": {
                                                    "additionalProperties": false,
                                                    "properties": {
                                                        "completion_time": {
                                                            "format": "date-time",
                                                            "type": "string"
                                                        },
                                                        "creation_height": {
                                                            "type": "integer"
                                                        },
                                                        "initial_balance": {
                                                            "additionalProperties": false,
                                                            "type": "object"
                                                        },
                                                        "shares_dst": {
                                                            "additionalProperties": false,
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "validator_dst_address": {
                                                "type": "string"
                                            },
                                            "validator_src_address": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Source of the default service's implementation of this method.",
                "url": "https://github.com/celestiaorg/celestia-node/blob/main/nodebuilder/state/state.go#L244"
            }
        },
        {
            "name": "state.QueryUnbonding",
            "description": "Auth level: read",
            "summary": "QueryUnbonding retrieves the unbonding status between a delegator and a validator.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "valAddr",
                    "description": "state.ValAddress",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "celestiavaloper1q3v5cugc8cdpud87u4zwy0a74uxkk6u4q4gx4p"
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*types.QueryUnbondingDelegationResponse",
                "description": "*types.QueryUnbondingDelegationResponse",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "unbond": {
                                "delegator_address": "string value",
                                "validator_address": "string value",
                                "entries": [
                                    {
                                        "creation_height": 42,
                                        "completion_time": "0001-01-01T00:00:00Z",
                                        "initial_balance": "42",
                                        "balance": "42"
                                    }
                                ]
                            }
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "unbond": {
                            "additionalProperties": false,
                            "properties": {
                                "delegator_address": {
                                    "type": "string"
                                },
                                "entries": {
                                    "items": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "balance": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            },
                                            "completion_time": {
                                                "format": "date-time",
                                                "type": "string"
                                            },
                                            "creation_height": {
                                                "type": "integer"
                                            },
                                            "initial_balance": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "validator_address": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Source of the default service's implementation of this method.",
                "url": "https://github.com/celestiaorg/celestia-node/blob/main/nodebuilder/state/state.go#L237"
            }
        },
        {
            "name": "state.RevokeGrantFee",
            "description": "Auth level: write",
            "summary": "No comment exists yet for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "grantee",
                    "description": "state.AccAddress",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "celestia1377k5an3f94v6wyaceu0cf4nq6gk2jtpc46g7h"
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "config",
                    "description": "*state.TxConfig",
                    "summary": "",
                    "schema": {
                        "examples": [
                            {
                                "gas_price": 0.002,
                                "is_gas_price_set": true,
                                "max_gas_price": 0.2,
                                "gas": 142225,
                                "tx_priority": 1,
                                "key_name": "my_celes_key",
                                "signer_address": "celestia1pjcmwj8w6hyr2c4wehakc5g8cfs36aysgucx66",
                                "fee_granter_address": "celestia1hakc56ax66ypjcmwj8w6hyr2c4g8cfs3wesguc"
                            }
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*state.TxResponse",
                "description": "*state.TxResponse",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "height": 30497,
                            "txhash": "05D9016060072AA71B007A6CFB1B895623192D6616D513017964C3BFCD047282",
                            "logs": null,
                            "events": null
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "code": {
                            "type": "integer"
                        },
                        "codespace": {
                            "type": "string"
                        },
                        "data": {
                            "type": "string"
                        },
                        "events": {
                            "items": {
                                "additionalProperties": false,
                                "properties": {
                                    "attributes": {
                                        "items": {
                                            "additionalProperties": false,
                                            "properties": {
                                                "index": {
                                                    "type": "boolean"
                                                },
                                                "key": {
                                                    "media": {
                                                        "binaryEncoding": "base64"
                                                    },
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "media": {
                                                        "binaryEncoding": "base64"
                                                    },
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "type": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "gas_used": {
                            "type": "integer"
                        },
                        "gas_wanted": {
                            "type": "integer"
                        },
                        "height": {
                            "type": "integer"
                        },
                        "info": {
                            "type": "string"
                        },
                        "logs": {
                            "items": {
                                "additionalProperties": false,
                                "properties": {
                                    "events": {
                                        "items": {
                                            "additionalProperties": false,
                                            "properties": {
                                                "attributes": {
                                                    "items": {
                                                        "additionalProperties": false,
                                                        "properties": {
                                                            "key": {
                                                                "type": "string"
                                                            },
                                                            "value": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "type": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "log": {
                                        "type": "string"
                                    },
                                    "msg_index": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "raw_log": {
                            "type": "string"
                        },
                        "timestamp": {
                            "type": "string"
                        },
                        "tx": {
                            "additionalProperties": false,
                            "properties": {
                                "type_url": {
                                    "type": "string"
                                },
                                "value": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "txhash": {
                            "type": "string"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Source of the default service's implementation of this method.",
                "url": "https://github.com/celestiaorg/celestia-node/blob/main/nodebuilder/state/state.go#L264"
            }
        },
        {
            "name": "state.SubmitPayForBlob",
            "description": "Auth level: write",
            "summary": "SubmitPayForBlob builds, signs and submits a PayForBlob transaction.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "blobs",
                    "description": "[]*libshare.Blob",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "namespace_id": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAwn/EaU0x0Q==",
                                    "data": "z8QyNztvogN7NYU27gI+nJgg1vMJtkK3vbduSDz7/8mhmos37I7duH51kkgouxrsdhdOBJ1431OmipNfVedbtwe6zQ06EbJBl/jk4QwwU3S29YBTUZcUfTzXpEJIuMrYzU6YPxN8Zce/KNdsEIy4zxdfxekXpvsgZMBhf83iYgfHvsFAoJmmCp/ORAUoAFf7tJ7cF8RZyA20ftqRa1uhAmktxIb58abpGTG+TNgq3mjyvswECVykJYqGjqNtInyIx2EQOnVp2q69YHkegdoBvoOKzEFigQTdrL2TZBex4MhkrYt7Zf0DQyNMRkCPL/zKYE3bhvXNWMThWCmhD5TOApzirORXKOTB0nxhjDF/aFYkrS+IKBw1KfJ5isldWvmasJBWwRgDuli6Cty67vMMk7fUUTUf0St6rvQeftSoEVlC1xEw46+h5kIXaWiM0g/EzGIAdZHycUFWCSdnt3p7BS5ttEpSf1d6ZbVYYL2y0XguH41k54JqufEMAw9ukmaF0IbN9Jk6fNefV1dsWTdCP6Mz6e+RTCd9DQGqb2VrsvMzx5uVidLD8ND79pvXgL1VzyhJaMTcjSfZK15jOxLwGh1arZc2gyTNiq2pu6wNz0tdJp+fFU+peG8rHN8="
                                }
                            ]
                        ],
                        "items": [
                            {
                                "additionalProperties": false,
                                "type": [
                                    "object"
                                ]
                            }
                        ],
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "config",
                    "description": "*state.TxConfig",
                    "summary": "",
                    "schema": {
                        "examples": [
                            {
                                "gas_price": 0.002,
                                "is_gas_price_set": true,
                                "max_gas_price": 0.2,
                                "gas": 142225,
                                "tx_priority": 1,
                                "key_name": "my_celes_key",
                                "signer_address": "celestia1pjcmwj8w6hyr2c4wehakc5g8cfs36aysgucx66",
                                "fee_granter_address": "celestia1hakc56ax66ypjcmwj8w6hyr2c4g8cfs3wesguc"
                            }
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*state.TxResponse",
                "description": "*state.TxResponse",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "height": 30497,
                            "txhash": "05D9016060072AA71B007A6CFB1B895623192D6616D513017964C3BFCD047282",
                            "logs": null,
                            "events": null
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "code": {
                            "type": "integer"
                        },
                        "codespace": {
                            "type": "string"
                        },
                        "data": {
                            "type": "string"
                        },
                        "events": {
                            "items": {
                                "additionalProperties": false,
                                "properties": {
                                    "attributes": {
                                        "items": {
                                            "additionalProperties": false,
                                            "properties": {
                                                "index": {
                                                    "type": "boolean"
                                                },
                                                "key": {
                                                    "media": {
                                                        "binaryEncoding": "base64"
                                                    },
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "media": {
                                                        "binaryEncoding": "base64"
                                                    },
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "type": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "gas_used": {
                            "type": "integer"
                        },
                        "gas_wanted": {
                            "type": "integer"
                        },
                        "height": {
                            "type": "integer"
                        },
                        "info": {
                            "type": "string"
                        },
                        "logs": {
                            "items": {
                                "additionalProperties": false,
                                "properties": {
                                    "events": {
                                        "items": {
                                            "additionalProperties": false,
                                            "properties": {
                                                "attributes": {
                                                    "items": {
                                                        "additionalProperties": false,
                                                        "properties": {
                                                            "key": {
                                                                "type": "string"
                                                            },
                                                            "value": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "type": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "log": {
                                        "type": "string"
                                    },
                                    "msg_index": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "raw_log": {
                            "type": "string"
                        },
                        "timestamp": {
                            "type": "string"
                        },
                        "tx": {
                            "additionalProperties": false,
                            "properties": {
                                "type_url": {
                                    "type": "string"
                                },
                                "value": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "txhash": {
                            "type": "string"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Source of the default service's implementation of this method.",
                "url": "https://github.com/celestiaorg/celestia-node/blob/main/nodebuilder/state/state.go#L189"
            }
        },
        {
            "name": "state.Transfer",
            "description": "Auth level: write",
            "summary": "Transfer sends the given amount of coins from default wallet of the node to the given account\naddress.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "to",
                    "description": "state.AccAddress",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "celestia1377k5an3f94v6wyaceu0cf4nq6gk2jtpc46g7h"
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "amount",
                    "description": "state.Int",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "42"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "config",
                    "description": "*state.TxConfig",
                    "summary": "",
                    "schema": {
                        "examples": [
                            {
                                "gas_price": 0.002,
                                "is_gas_price_set": true,
                                "max_gas_price": 0.2,
                                "gas": 142225,
                                "tx_priority": 1,
                                "key_name": "my_celes_key",
                                "signer_address": "celestia1pjcmwj8w6hyr2c4wehakc5g8cfs36aysgucx66",
                                "fee_granter_address": "celestia1hakc56ax66ypjcmwj8w6hyr2c4g8cfs3wesguc"
                            }
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*state.TxResponse",
                "description": "*state.TxResponse",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "height": 30497,
                            "txhash": "05D9016060072AA71B007A6CFB1B895623192D6616D513017964C3BFCD047282",
                            "logs": null,
                            "events": null
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "code": {
                            "type": "integer"
                        },
                        "codespace": {
                            "type": "string"
                        },
                        "data": {
                            "type": "string"
                        },
                        "events": {
                            "items": {
                                "additionalProperties": false,
                                "properties": {
                                    "attributes": {
                                        "items": {
                                            "additionalProperties": false,
                                            "properties": {
                                                "index": {
                                                    "type": "boolean"
                                                },
                                                "key": {
                                                    "media": {
                                                        "binaryEncoding": "base64"
                                                    },
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "media": {
                                                        "binaryEncoding": "base64"
                                                    },
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "type": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "gas_used": {
                            "type": "integer"
                        },
                        "gas_wanted": {
                            "type": "integer"
                        },
                        "height": {
                            "type": "integer"
                        },
                        "info": {
                            "type": "string"
                        },
                        "logs": {
                            "items": {
                                "additionalProperties": false,
                                "properties": {
                                    "events": {
                                        "items": {
                                            "additionalProperties": false,
                                            "properties": {
                                                "attributes": {
                                                    "items": {
                                                        "additionalProperties": false,
                                                        "properties": {
                                                            "key": {
                                                                "type": "string"
                                                            },
                                                            "value": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "type": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "log": {
                                        "type": "string"
                                    },
                                    "msg_index": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "raw_log": {
                            "type": "string"
                        },
                        "timestamp": {
                            "type": "string"
                        },
                        "tx": {
                            "additionalProperties": false,
                            "properties": {
                                "type_url": {
                                    "type": "string"
                                },
                                "value": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "txhash": {
                            "type": "string"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Source of the default service's implementation of this method.",
                "url": "https://github.com/celestiaorg/celestia-node/blob/main/nodebuilder/state/state.go#L180"
            }
        },
        {
            "name": "state.Undelegate",
            "description": "Auth level: write",
            "summary": "Undelegate undelegates a user's delegated tokens, unbonding them from the current validator.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "delAddr",
                    "description": "state.ValAddress",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "celestiavaloper1q3v5cugc8cdpud87u4zwy0a74uxkk6u4q4gx4p"
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "amount",
                    "description": "state.Int",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "42"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "config",
                    "description": "*state.TxConfig",
                    "summary": "",
                    "schema": {
                        "examples": [
                            {
                                "gas_price": 0.002,
                                "is_gas_price_set": true,
                                "max_gas_price": 0.2,
                                "gas": 142225,
                                "tx_priority": 1,
                                "key_name": "my_celes_key",
                                "signer_address": "celestia1pjcmwj8w6hyr2c4wehakc5g8cfs36aysgucx66",
                                "fee_granter_address": "celestia1hakc56ax66ypjcmwj8w6hyr2c4g8cfs3wesguc"
                            }
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*state.TxResponse",
                "description": "*state.TxResponse",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "height": 30497,
                            "txhash": "05D9016060072AA71B007A6CFB1B895623192D6616D513017964C3BFCD047282",
                            "logs": null,
                            "events": null
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "code": {
                            "type": "integer"
                        },
                        "codespace": {
                            "type": "string"
                        },
                        "data": {
                            "type": "string"
                        },
                        "events": {
                            "items": {
                                "additionalProperties": false,
                                "properties": {
                                    "attributes": {
                                        "items": {
                                            "additionalProperties": false,
                                            "properties": {
                                                "index": {
                                                    "type": "boolean"
                                                },
                                                "key": {
                                                    "media": {
                                                        "binaryEncoding": "base64"
                                                    },
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "media": {
                                                        "binaryEncoding": "base64"
                                                    },
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "type": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "gas_used": {
                            "type": "integer"
                        },
                        "gas_wanted": {
                            "type": "integer"
                        },
                        "height": {
                            "type": "integer"
                        },
                        "info": {
                            "type": "string"
                        },
                        "logs": {
                            "items": {
                                "additionalProperties": false,
                                "properties": {
                                    "events": {
                                        "items": {
                                            "additionalProperties": false,
                                            "properties": {
                                                "attributes": {
                                                    "items": {
                                                        "additionalProperties": false,
                                                        "properties": {
                                                            "key": {
                                                                "type": "string"
                                                            },
                                                            "value": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "type": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "log": {
                                        "type": "string"
                                    },
                                    "msg_index": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "raw_log": {
                            "type": "string"
                        },
                        "timestamp": {
                            "type": "string"
                        },
                        "tx": {
                            "additionalProperties": false,
                            "properties": {
                                "type_url": {
                                    "type": "string"
                                },
                                "value": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "txhash": {
                            "type": "string"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "deprecated": false,
            "externalDocs": {
                "description": "Source of the default service's implementation of this method.",
                "url": "https://github.com/celestiaorg/celestia-node/blob/main/nodebuilder/state/state.go#L215"
            }
        }
    ]
}